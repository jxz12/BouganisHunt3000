// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   jxz12@EEWS104A-012
//  Generated date: Thu May 23 14:45:59 2013
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    game_engine_core
// ------------------------------------------------------------------


module game_engine_core (
  clk, en, arst_n, crosshair_x_rsc_mgc_in_wire_d, crosshair_y_rsc_mgc_in_wire_d,
      shot_attempted_rsc_mgc_in_wire_d, shot_timer_rsc_mgc_out_stdreg_d, target_x_out_rsc_mgc_out_stdreg_d,
      target_y_out_rsc_mgc_out_stdreg_d, target_shot_rsc_mgc_out_stdreg_d, score_out_rsc_mgc_out_stdreg_d,
      life_out_rsc_mgc_out_stdreg_d, shot_fired_out_rsc_mgc_out_stdreg_d, game_started_out_rsc_mgc_out_stdreg_d,
      game_over_rsc_mgc_out_stdreg_d, start_highlighted_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [9:0] crosshair_x_rsc_mgc_in_wire_d;
  input [9:0] crosshair_y_rsc_mgc_in_wire_d;
  input shot_attempted_rsc_mgc_in_wire_d;
  output [1:0] shot_timer_rsc_mgc_out_stdreg_d;
  reg [1:0] shot_timer_rsc_mgc_out_stdreg_d;
  output [9:0] target_x_out_rsc_mgc_out_stdreg_d;
  reg [9:0] target_x_out_rsc_mgc_out_stdreg_d;
  output [9:0] target_y_out_rsc_mgc_out_stdreg_d;
  reg [9:0] target_y_out_rsc_mgc_out_stdreg_d;
  output target_shot_rsc_mgc_out_stdreg_d;
  reg target_shot_rsc_mgc_out_stdreg_d;
  output [9:0] score_out_rsc_mgc_out_stdreg_d;
  reg [9:0] score_out_rsc_mgc_out_stdreg_d;
  output [1:0] life_out_rsc_mgc_out_stdreg_d;
  reg [1:0] life_out_rsc_mgc_out_stdreg_d;
  output shot_fired_out_rsc_mgc_out_stdreg_d;
  reg shot_fired_out_rsc_mgc_out_stdreg_d;
  output game_started_out_rsc_mgc_out_stdreg_d;
  reg game_started_out_rsc_mgc_out_stdreg_d;
  output game_over_rsc_mgc_out_stdreg_d;
  reg game_over_rsc_mgc_out_stdreg_d;
  output start_highlighted_rsc_mgc_out_stdreg_d;
  reg start_highlighted_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  wire or_1_tmp;
  wire else_5_or_tmp;
  wire or_dcpl_57;
  wire or_dcpl_80;
  reg C1_1_1_dfmergedata_lpi_1;
  reg if_3_if_acc_2_ncse_sg1_lpi_1;
  reg [9:0] time_counter_sva;
  reg [9:0] game_over_counter_sva;
  reg [9:0] fire_rate_counter_sva;
  reg game_started_sva;
  reg [2:0] target_x_sg1_sg1_sva;
  reg [2:0] target_x_sg1_1_sva;
  reg target_x_sg1_sg2_sva;
  reg [9:0] score_sva;
  reg [9:0] target_state_counter_sva;
  reg [1:0] target_platform_sva;
  reg [1:0] misses_sva;
  reg if_3_if_acc_1_ncse_sg1_lpi_1_dfm_2;
  reg and_3_m1c;
  reg else_5_and_6_psp;
  reg else_5_slc_1_svs_1;
  reg C1_1_1_dfmergedata_lpi_1_dfm_6;
  reg [2:0] target_x_sg1_1_sva_dfm_4;
  reg [2:0] target_x_sg1_sg1_sva_dfm_4;
  reg [9:0] score_sva_dfm_6;
  reg game_started_sva_dfm_3;
  reg else_5_and_mdf_sva_1;
  reg [9:0] target_y_sva_7;
  reg slc_mdf_sva_1;
  reg [1:0] acc_2_itm_1;
  wire [2:0] nl_acc_2_itm_1;
  reg if_3_if_and_1_itm_1;
  reg target_state_counter_slc_target_state_counter_itm_1;
  reg game_started_asn_itm_1;
  reg else_5_slc_svs_st_1;
  reg exit_game_engine_lpi_1_dfm_st_1;
  reg mux_38_itm_1;
  reg and_9_itm_1;
  reg main_stage_0_2;
  reg [1:0] target_y_sva_sg3;
  reg target_y_sva_sg2;
  reg [1:0] target_y_sva_sg1;
  reg [4:0] target_y_sva_8;
  reg [7:0] target_timer_sva_sg1;
  reg [1:0] target_timer_sva_4;
  reg [1:0] target_y_sva_dfm_9_sg3;
  reg target_y_sva_dfm_9_sg2;
  reg [1:0] target_y_sva_dfm_9_sg1;
  reg [4:0] target_y_sva_dfm_13;
  reg [1:0] else_5_mux_18_itm_1_sg3;
  reg else_5_mux_18_itm_1_sg2;
  reg [1:0] else_5_mux_18_itm_1_sg1;
  reg [4:0] else_5_mux_18_itm_3;
  reg slc_target_y_sva_dfm_itm_1_sg3;
  reg slc_target_y_sva_dfm_itm_1_sg1_1;
  wire or_79_cse;
  wire else_5_and_5_ssc_1;
  wire [9:0] target_timer_sva_5;
  wire [10:0] nl_target_timer_sva_5;
  wire shot_fired_out_rsc_d_dfmergesel_lpi_1_dfm;
  wire nor_9_cse;
  wire and_64_cse;
  wire or_dcpl;
  wire and_dcpl_65;
  wire and_dcpl_66;
  wire and_dcpl_70;
  wire and_dcpl_75;
  wire and_dcpl_76;
  wire and_18_ssc;
  wire or_5_ssc;
  wire else_5_and_mdf_sva;
  wire and_30_ssc;
  wire and_31_ssc;
  wire if_3_land_3_lpi_1_dfm;
  wire and_3_m1c_mx0w0;
  wire [1:0] misses_sva_dfm_mx0;
  wire and_141_tmp;
  wire nor_19_m1c;
  wire nor_21_m1c;
  wire and_140_tmp;
  wire and_84_cse;
  wire else_5_and_6_psp_mx0;
  wire and_2_itm;
  wire [1:0] else_5_asn_mx0w1;
  wire [2:0] nl_else_5_asn_mx0w1;
  wire and_148_cse;
  wire and_149_cse;
  wire and_150_cse;
  wire [9:0] else_5_if_acc_1_itm;
  wire [10:0] nl_else_5_if_acc_1_itm;
  wire [10:0] else_5_acc_3_itm;
  wire [11:0] nl_else_5_acc_3_itm;
  wire [10:0] acc_1_itm;
  wire [11:0] nl_acc_1_itm;
  wire [11:0] else_5_else_else_if_acc_6_itm;
  wire [12:0] nl_else_5_else_else_if_acc_6_itm;
  wire [11:0] else_5_else_else_if_acc_9_itm;
  wire [12:0] nl_else_5_else_else_if_acc_9_itm;
  wire [8:0] else_5_else_else_if_acc_4_itm;
  wire [9:0] nl_else_5_else_else_if_acc_4_itm;
  wire [8:0] else_5_else_else_if_acc_7_itm;
  wire [9:0] nl_else_5_else_else_if_acc_7_itm;
  wire [1:0] target_y_sva_sg3_mx0;
  wire [4:0] target_y_sva_8_mx0;
  wire target_y_sva_sg2_mx0;
  wire [1:0] target_y_sva_sg1_mx0;
  wire [1:0] target_y_sva_dfm_7_sg3;
  wire target_y_sva_dfm_7_sg2;
  wire [1:0] target_y_sva_dfm_7_sg1;
  wire [4:0] target_y_sva_dfm_12;
  wire [9:0] target_y_sva_4;
  wire [11:0] nl_target_y_sva_4;
  wire [4:0] target_y_sva_dfm_11;
  wire target_y_sva_dfm_2_sg2;
  wire [1:0] target_y_sva_dfm_2_sg1;
  wire exit_game_engine_lpi_1_dfm;
  wire exit_game_engine_lpi_1_dfm_1;
  wire C1_1_1_dfmergedata_lpi_1_dfm_6_mx0;
  wire [9:0] score_sva_dfm_6_mx0;
  wire game_started_sva_dfm_3_mx0;
  wire [2:0] target_x_sg1_sg1_sva_dfm_2;
  wire [2:0] target_x_sg1_1_sva_dfm_2;
  wire or_4_ssc;
  wire and_35_ssc;
  wire else_5_and_4_m1c;
  wire shot_fired_lpi_1_dfm;
  wire if_3_land_2_lpi_1_dfm;
  wire else_5_else_else_land_lpi_1_dfm;
  wire and_3_m1c_mx0;
  wire [9:0] fire_rate_counter_sva_dfm_1;
  wire [9:0] target_state_counter_sva_dfm_1;
  wire C1_1_1_dfmergedata_lpi_1_dfm_1;
  wire or_3_m1c;
  wire else_5_and_8_tmp;
  wire and_29_m1c;
  wire [2:0] acc_imod_1_sva;
  wire [3:0] nl_acc_imod_1_sva;
  wire [3:0] acc_3_psp_sva;
  wire [4:0] nl_acc_3_psp_sva;
  wire [19:0] mul_idiv_sva;
  wire [39:0] nl_mul_idiv_sva;
  wire [9:0] time_counter_sva_1;
  wire [10:0] nl_time_counter_sva_1;
  wire [10:0] else_5_acc_4_itm;
  wire [11:0] nl_else_5_acc_4_itm;
  wire [5:0] if_3_if_acc_2_itm;
  wire [6:0] nl_if_3_if_acc_2_itm;
  wire [6:0] if_3_if_acc_1_itm;
  wire [7:0] nl_if_3_if_acc_1_itm;
  wire [6:0] if_3_if_acc_itm;
  wire [7:0] nl_if_3_if_acc_itm;
  wire [2:0] if_3_if_1_acc_4_itm;
  wire [3:0] nl_if_3_if_1_acc_4_itm;
  wire [2:0] else_5_else_if_acc_16_itm;
  wire [3:0] nl_else_5_else_if_acc_16_itm;

  wire[1:0] mux1h_16_nl;
  wire[0:0] mux_14_nl;
  wire[1:0] mux1h_nl;
  wire[4:0] mux1h_21_nl;
  wire[0:0] else_5_mux_39_nl;
  wire[9:0] mux_85_nl;
  wire[0:0] mux_80_nl;
  wire[2:0] mux1h_22_nl;
  wire[0:0] if_3_if_mux_12_nl;
  wire[0:0] if_3_if_mux_13_nl;
  wire[9:0] mux_86_nl;

  // Interconnect Declarations for Component Instantiations 
  assign nor_9_cse = ~(or_1_tmp | (else_5_else_else_if_acc_7_itm[8]));
  assign and_64_cse = shot_attempted_rsc_mgc_in_wire_d & nor_9_cse & (else_5_else_else_if_acc_4_itm[8])
      & (~ (else_5_else_else_if_acc_9_itm[11])) & (else_5_else_else_if_acc_6_itm[11]);
  assign and_84_cse = (~ (acc_1_itm[10])) & game_started_sva;
  assign and_141_tmp = and_3_m1c_mx0w0 & (~ (acc_1_itm[10]));
  assign nor_19_m1c = ~(or_dcpl | and_dcpl_65);
  assign target_y_sva_sg3_mx0 = MUX_v_2_2_2({target_y_sva_dfm_7_sg3 , target_y_sva_sg3},
      or_dcpl_57);
  assign target_y_sva_8_mx0 = MUX_v_5_2_2({target_y_sva_dfm_12 , target_y_sva_8},
      or_dcpl_57);
  assign target_y_sva_sg2_mx0 = MUX_s_1_2_2({target_y_sva_dfm_7_sg2 , target_y_sva_sg2},
      or_dcpl_57);
  assign target_y_sva_sg1_mx0 = MUX_v_2_2_2({target_y_sva_dfm_7_sg1 , target_y_sva_sg1},
      or_dcpl_57);
  assign nor_21_m1c = ~(and_dcpl_76 | and_31_ssc);
  assign and_148_cse = (~ game_started_asn_itm_1) & nor_21_m1c;
  assign and_149_cse = or_4_ssc & nor_21_m1c;
  assign and_150_cse = and_35_ssc & nor_21_m1c;
  assign mux1h_16_nl = MUX1HOT_v_2_3_2({({1'b0 , slc_target_y_sva_dfm_itm_1_sg3})
      , target_y_sva_dfm_9_sg3 , (target_y_sva_7[9:8])}, {and_148_cse , and_149_cse
      , and_150_cse});
  assign target_y_sva_dfm_7_sg3 = ((mux1h_16_nl) & (signext_2_1(~ and_dcpl_76)))
      | ({{1{and_31_ssc}}, and_31_ssc});
  assign mux_14_nl = MUX_s_1_2_2({target_y_sva_dfm_9_sg2 , (target_y_sva_7[7])},
      and_35_ssc);
  assign target_y_sva_dfm_7_sg2 = (mux_14_nl) | (~ game_started_asn_itm_1) | and_30_ssc
      | and_31_ssc;
  assign mux1h_nl = MUX1HOT_v_2_3_2({({{1{slc_target_y_sva_dfm_itm_1_sg1_1}}, slc_target_y_sva_dfm_itm_1_sg1_1})
      , target_y_sva_dfm_9_sg1 , (target_y_sva_7[6:5])}, {and_148_cse , and_149_cse
      , and_150_cse});
  assign target_y_sva_dfm_7_sg1 = ((mux1h_nl) & (signext_2_1(~ and_dcpl_76))) | ({{1{and_31_ssc}},
      and_31_ssc});
  assign mux1h_21_nl = MUX1HOT_v_5_4_2({target_y_sva_dfm_13 , 5'b10110 , (target_y_sva_7[4:0])
      , 5'b1000}, {(or_4_ssc & game_started_asn_itm_1) , (and_30_ssc & game_started_asn_itm_1)
      , (and_35_ssc & game_started_asn_itm_1) , (and_31_ssc & game_started_asn_itm_1)});
  assign target_y_sva_dfm_12 = (mux1h_21_nl) & ({{4{game_started_asn_itm_1}}, game_started_asn_itm_1});
  assign nl_target_y_sva_4 = (10'b111111111 + conv_u2u_9_10(~ (score_sva[9:1])))
      + ({target_y_sva_sg3_mx0 , target_y_sva_dfm_2_sg2 , target_y_sva_dfm_2_sg1
      , target_y_sva_dfm_11});
  assign target_y_sva_4 = nl_target_y_sva_4[9:0];
  assign target_y_sva_dfm_11 = target_y_sva_8_mx0 & (signext_5_1(~ else_5_and_5_ssc_1));
  assign target_y_sva_dfm_2_sg2 = target_y_sva_sg2_mx0 | else_5_and_5_ssc_1;
  assign target_y_sva_dfm_2_sg1 = target_y_sva_sg1_mx0 & (signext_2_1(~ else_5_and_5_ssc_1));
  assign nl_else_5_acc_4_itm = ({1'b1 , (~ else_5_mux_18_itm_1_sg3) , (~ else_5_mux_18_itm_1_sg2)
      , (~ else_5_mux_18_itm_1_sg1) , (~ else_5_mux_18_itm_3)}) + 11'b10010111;
  assign else_5_acc_4_itm = nl_else_5_acc_4_itm[10:0];
  assign exit_game_engine_lpi_1_dfm = else_5_else_else_land_lpi_1_dfm | (target_state_counter_sva[0]);
  assign exit_game_engine_lpi_1_dfm_1 = exit_game_engine_lpi_1_dfm | (else_5_if_acc_1_itm[9]);
  assign nl_else_5_if_acc_1_itm = ({1'b1 , (~ (target_state_counter_sva[9:1]))})
      + 10'b1;
  assign else_5_if_acc_1_itm = nl_else_5_if_acc_1_itm[9:0];
  assign else_5_mux_39_nl = MUX_s_1_2_2({(C1_1_1_dfmergedata_lpi_1_dfm_1 & (~ else_5_and_mdf_sva))
      , C1_1_1_dfmergedata_lpi_1_dfm_1}, exit_game_engine_lpi_1_dfm_1);
  assign C1_1_1_dfmergedata_lpi_1_dfm_6_mx0 = MUX_s_1_2_2({C1_1_1_dfmergedata_lpi_1_dfm_1
      , (else_5_mux_39_nl)}, game_started_sva);
  assign mux_80_nl = MUX_s_1_2_2({(game_started_sva | (~ if_3_land_3_lpi_1_dfm))
      , (~(game_started_sva | if_3_land_3_lpi_1_dfm))}, shot_attempted_rsc_mgc_in_wire_d
      & nor_9_cse & (else_5_else_else_if_acc_4_itm[8]) & (~ (else_5_else_else_if_acc_9_itm[11]))
      & (else_5_else_else_if_acc_6_itm[11]) & (~ (else_5_if_acc_1_itm[9])) & (~ (target_state_counter_sva[0])));
  assign mux_85_nl = MUX_v_10_2_2({((score_sva + 10'b1) | (signext_10_1(~ game_started_sva)))
      , score_sva}, mux_80_nl);
  assign score_sva_dfm_6_mx0 = (mux_85_nl) & (signext_10_1(~ and_18_ssc));
  assign game_started_sva_dfm_3_mx0 = MUX_s_1_2_2({if_3_land_3_lpi_1_dfm , ((~ else_5_and_mdf_sva)
      | exit_game_engine_lpi_1_dfm_1)}, game_started_sva);
  assign and_140_tmp = else_5_and_mdf_sva & and_3_m1c_mx0w0;
  assign mux1h_22_nl = MUX1HOT_v_3_3_2({3'b11 , (conv_u2u_2_3(target_platform_sva)
      + ({target_platform_sva , 1'b1})) , target_x_sg1_sg1_sva}, {(~(game_started_sva
      | and_140_tmp)) , (and_3_m1c_mx0w0 & (~ and_140_tmp)) , (and_2_itm & (~ and_140_tmp))});
  assign target_x_sg1_sg1_sva_dfm_2 = (mux1h_22_nl) | ({{2{and_140_tmp}}, and_140_tmp});
  assign target_x_sg1_1_sva_dfm_2 = MUX1HOT_v_3_4_2({3'b110 , 3'b10 , 3'b101 , target_x_sg1_1_sva},
      {(~ game_started_sva) , ((~(else_5_and_mdf_sva | exit_game_engine_lpi_1_dfm_1))
      & game_started_sva) , (else_5_and_mdf_sva & (~ exit_game_engine_lpi_1_dfm_1)
      & game_started_sva) , and_2_itm});
  assign and_2_itm = exit_game_engine_lpi_1_dfm_1 & game_started_sva;
  assign if_3_if_mux_12_nl = MUX_s_1_2_2({if_3_if_acc_2_ncse_sg1_lpi_1 , (if_3_if_acc_2_itm[5])},
      if_3_land_2_lpi_1_dfm);
  assign if_3_if_mux_13_nl = MUX_s_1_2_2({(if_3_if_acc_1_itm[6]) , if_3_if_acc_1_ncse_sg1_lpi_1_dfm_2},
      if_3_if_acc_itm[6]);
  assign if_3_land_3_lpi_1_dfm = (if_3_if_1_acc_4_itm[2]) & (~((if_3_if_mux_12_nl)
      | (~((if_3_if_mux_13_nl) & (~((if_3_if_acc_itm[6]) | (~ shot_fired_lpi_1_dfm)))))));
  assign or_4_ssc = and_9_itm_1 | ((~ else_5_slc_1_svs_1) & else_5_and_4_m1c);
  assign and_35_ssc = else_5_slc_1_svs_1 & else_5_and_4_m1c;
  assign and_30_ssc = (~((else_5_acc_4_itm[10]) | else_5_and_mdf_sva_1)) & and_3_m1c;
  assign and_31_ssc = else_5_and_mdf_sva_1 & and_3_m1c;
  assign else_5_and_mdf_sva = (misses_sva_dfm_mx0[1]) & (misses_sva_dfm_mx0[0]);
  assign nl_else_5_acc_3_itm = ({1'b1 , (~ target_y_sva_sg3_mx0) , (~ target_y_sva_dfm_2_sg2)
      , (~ target_y_sva_dfm_2_sg1) , (~ target_y_sva_dfm_11)}) + 11'b10010111;
  assign else_5_acc_3_itm = nl_else_5_acc_3_itm[10:0];
  assign else_5_and_4_m1c = (else_5_acc_4_itm[10]) & (~ else_5_and_mdf_sva_1) & and_3_m1c;
  assign nl_acc_1_itm = ({1'b1 , (~ game_over_counter_sva)}) + 11'b1;
  assign acc_1_itm = nl_acc_1_itm[10:0];
  assign shot_fired_lpi_1_dfm = shot_attempted_rsc_mgc_in_wire_d & (~ or_1_tmp);
  assign nl_target_timer_sva_5 = ({target_timer_sva_sg1 , target_timer_sva_4}) +
      10'b1111111111;
  assign target_timer_sva_5 = nl_target_timer_sva_5[9:0];
  assign else_5_and_5_ssc_1 = (target_state_counter_sva[0]) & (~ (else_5_if_acc_1_itm[9]));
  assign nl_else_5_else_else_if_acc_6_itm = conv_u2s_11_12(conv_u2u_10_11(crosshair_y_rsc_mgc_in_wire_d)
      + conv_u2u_10_11({(~ target_y_sva_sg3_mx0) , (~ target_y_sva_sg2_mx0) , (~
      target_y_sva_sg1_mx0) , (~ target_y_sva_8_mx0)})) + 12'b101110100001;
  assign else_5_else_else_if_acc_6_itm = nl_else_5_else_else_if_acc_6_itm[11:0];
  assign nl_else_5_else_else_if_acc_9_itm = ({1'b1 , crosshair_y_rsc_mgc_in_wire_d
      , 1'b1}) + conv_u2u_11_12({(~ target_y_sva_sg3_mx0) , (~ target_y_sva_sg2_mx0)
      , (~ target_y_sva_sg1_mx0) , (~ target_y_sva_8_mx0) , 1'b1});
  assign else_5_else_else_if_acc_9_itm = nl_else_5_else_else_if_acc_9_itm[11:0];
  assign nl_else_5_else_else_if_acc_4_itm = conv_u2u_8_9(conv_u2u_7_8(crosshair_x_rsc_mgc_in_wire_d[9:3])
      + conv_u2u_7_8({(~ target_x_sg1_sg2_sva) , (~ target_x_sg1_sg1_sva) , (~ target_x_sg1_1_sva)}))
      + 9'b101110101;
  assign else_5_else_else_if_acc_4_itm = nl_else_5_else_else_if_acc_4_itm[8:0];
  assign nl_else_5_else_else_if_acc_7_itm = ({1'b1 , (crosshair_x_rsc_mgc_in_wire_d[9:3])
      , 1'b1}) + conv_u2u_8_9({(~ target_x_sg1_sg2_sva) , (~ target_x_sg1_sg1_sva)
      , (~ target_x_sg1_1_sva) , 1'b1});
  assign else_5_else_else_if_acc_7_itm = nl_else_5_else_else_if_acc_7_itm[8:0];
  assign nl_if_3_if_acc_2_itm = conv_u2u_5_6(crosshair_y_rsc_mgc_in_wire_d[9:5])
      + 6'b111001;
  assign if_3_if_acc_2_itm = nl_if_3_if_acc_2_itm[5:0];
  assign nl_if_3_if_acc_1_itm = conv_u2u_6_7(crosshair_x_rsc_mgc_in_wire_d[9:4])
      + 7'b1100111;
  assign if_3_if_acc_1_itm = nl_if_3_if_acc_1_itm[6:0];
  assign if_3_land_2_lpi_1_dfm = (if_3_if_acc_1_itm[6]) & (~ (if_3_if_acc_itm[6]));
  assign nl_if_3_if_acc_itm = conv_u2u_6_7(crosshair_x_rsc_mgc_in_wire_d[9:4]) +
      7'b1110001;
  assign if_3_if_acc_itm = nl_if_3_if_acc_itm[6:0];
  assign else_5_else_else_land_lpi_1_dfm = (else_5_else_else_if_acc_6_itm[11]) &
      (~ (else_5_else_else_if_acc_9_itm[11])) & (else_5_else_else_if_acc_4_itm[8])
      & (~ (else_5_else_else_if_acc_7_itm[8])) & shot_fired_lpi_1_dfm;
  assign or_1_tmp = (fire_rate_counter_sva[9]) | (fire_rate_counter_sva[8]) | (fire_rate_counter_sva[7])
      | (fire_rate_counter_sva[6]) | (fire_rate_counter_sva[5]) | (fire_rate_counter_sva[4])
      | (fire_rate_counter_sva[3]) | (fire_rate_counter_sva[2]) | (fire_rate_counter_sva[1])
      | (fire_rate_counter_sva[0]);
  assign and_3_m1c_mx0w0 = (~ exit_game_engine_lpi_1_dfm_1) & game_started_sva;
  assign and_3_m1c_mx0 = MUX_s_1_2_2({and_3_m1c_mx0w0 , and_3_m1c}, acc_1_itm[10]);
  assign or_5_ssc = (~(if_3_land_3_lpi_1_dfm | game_started_sva)) | ((~ else_5_and_6_psp_mx0)
      & and_2_itm);
  assign and_18_ssc = if_3_land_3_lpi_1_dfm & (~ game_started_sva);
  assign fire_rate_counter_sva_dfm_1 = MUX1HOT_v_10_3_2({fire_rate_counter_sva ,
      10'b11000 , (fire_rate_counter_sva + 10'b1111111111)}, {(~(shot_attempted_rsc_mgc_in_wire_d
      | or_1_tmp)) , shot_fired_lpi_1_dfm , or_1_tmp});
  assign nl_if_3_if_1_acc_4_itm = conv_u2u_2_3(crosshair_y_rsc_mgc_in_wire_d[9:8])
      + 3'b111;
  assign if_3_if_1_acc_4_itm = nl_if_3_if_1_acc_4_itm[2:0];
  assign mux_86_nl = MUX_v_10_2_2({target_state_counter_sva , 10'b101101}, else_5_else_else_land_lpi_1_dfm
      & (~ (target_state_counter_sva[0])));
  assign target_state_counter_sva_dfm_1 = (mux_86_nl) & (signext_10_1(~ (target_state_counter_sva[0])));
  assign else_5_or_tmp = (target_timer_sva_5[9]) | (target_timer_sva_5[8]) | (target_timer_sva_5[7])
      | (target_timer_sva_5[6]) | (target_timer_sva_5[5]) | (target_timer_sva_5[4])
      | (target_timer_sva_5[3]) | (target_timer_sva_5[2]) | (target_timer_sva_5[1])
      | (target_timer_sva_5[0]);
  assign shot_fired_out_rsc_d_dfmergesel_lpi_1_dfm = shot_attempted_rsc_mgc_in_wire_d
      | or_1_tmp;
  assign C1_1_1_dfmergedata_lpi_1_dfm_1 = ~((~(C1_1_1_dfmergedata_lpi_1 | shot_attempted_rsc_mgc_in_wire_d))
      | or_1_tmp);
  assign nl_else_5_asn_mx0w1 = misses_sva + 2'b1;
  assign else_5_asn_mx0w1 = nl_else_5_asn_mx0w1[1:0];
  assign misses_sva_dfm_mx0 = MUX_v_2_2_2({else_5_asn_mx0w1 , misses_sva}, else_5_or_tmp);
  assign else_5_and_6_psp_mx0 = MUX_s_1_2_2({else_5_and_6_psp , else_5_and_5_ssc_1},
      game_started_sva);
  assign or_3_m1c = and_2_itm | (else_5_or_tmp & and_3_m1c_mx0w0);
  assign else_5_and_8_tmp = else_5_and_mdf_sva & (~ exit_game_engine_lpi_1_dfm_1);
  assign and_29_m1c = game_started_sva & (~ (acc_1_itm[10]));
  assign nl_else_5_else_if_acc_16_itm = ({1'b1 , (acc_imod_1_sva[0]) , 1'b1}) + conv_u2s_2_3({(~
      (acc_imod_1_sva[1])) , (~ (acc_imod_1_sva[2]))});
  assign else_5_else_if_acc_16_itm = nl_else_5_else_if_acc_16_itm[2:0];
  assign nl_acc_imod_1_sva = conv_s2s_2_3(conv_s2s_1_2(acc_3_psp_sva[1]) + conv_u2s_1_2(acc_3_psp_sva[0]))
      + conv_s2s_2_3(acc_3_psp_sva[3:2]);
  assign acc_imod_1_sva = nl_acc_imod_1_sva[2:0];
  assign nl_acc_3_psp_sva = (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(mul_idiv_sva[2])
      , 1'b1}) + conv_u2u_2_3({(~ (mul_idiv_sva[3])) , 1'b1})))) , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(mul_idiv_sva[4])
      , 1'b1}) + conv_u2u_2_3({(~ (mul_idiv_sva[5])) , 1'b1})))) , (~ (mul_idiv_sva[17]))}))))
      , 1'b1}) + conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(mul_idiv_sva[6])
      , 1'b1}) + conv_u2u_2_3({(~ (mul_idiv_sva[7])) , 1'b1})))) , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(mul_idiv_sva[8])
      , 1'b1}) + conv_u2u_2_3({(~ (mul_idiv_sva[9])) , 1'b1})))) , (mul_idiv_sva[16])}))))
      , (~ (mul_idiv_sva[19]))})))) + (readslicef_5_4_1((conv_u2u_4_5({(readslicef_4_3_1((conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(mul_idiv_sva[10])
      , 1'b1}) + conv_u2u_2_3({(~ (mul_idiv_sva[11])) , 1'b1})))) , 1'b1}) + conv_u2u_3_4({(readslicef_3_2_1((conv_u2u_2_3({(mul_idiv_sva[12])
      , 1'b1}) + conv_u2u_2_3({(~ (mul_idiv_sva[13])) , 1'b1})))) , (~ (mul_idiv_sva[15]))}))))
      , 1'b1}) + conv_u2u_3_5({(readslicef_3_2_1((conv_u2u_2_3({(mul_idiv_sva[0])
      , 1'b1}) + conv_u2u_2_3({(~ (mul_idiv_sva[1])) , (mul_idiv_sva[14])})))) ,
      (mul_idiv_sva[18])}))));
  assign acc_3_psp_sva = nl_acc_3_psp_sva[3:0];
  assign nl_mul_idiv_sva = 20'b1111100101 * conv_u2u_10_20(time_counter_sva_1);
  assign mul_idiv_sva = nl_mul_idiv_sva[19:0];
  assign nl_time_counter_sva_1 = time_counter_sva + 10'b1;
  assign time_counter_sva_1 = nl_time_counter_sva_1[9:0];
  assign or_dcpl_57 = (~ main_stage_0_2) | slc_mdf_sva_1;
  assign or_79_cse = or_dcpl_57 | and_9_itm_1;
  assign or_dcpl_80 = (else_5_if_acc_1_itm[9]) | (~ (target_state_counter_sva[0]));
  assign or_dcpl = ((~ and_18_ssc) & or_5_ssc) | (acc_1_itm[10]);
  assign and_dcpl_65 = (~ (acc_1_itm[10])) & and_18_ssc;
  assign and_dcpl_66 = ~(and_64_cse | (else_5_if_acc_1_itm[9]));
  assign and_dcpl_70 = and_84_cse & (~ (target_state_counter_sva[0])) & and_dcpl_66
      & (~ else_5_and_mdf_sva);
  assign and_dcpl_75 = and_84_cse & (~ (target_state_counter_sva[0])) & and_dcpl_66
      & else_5_and_mdf_sva;
  assign and_dcpl_76 = (~ and_31_ssc) & and_30_ssc;
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      start_highlighted_rsc_mgc_out_stdreg_d <= 1'b0;
      target_shot_rsc_mgc_out_stdreg_d <= 1'b0;
      shot_fired_out_rsc_mgc_out_stdreg_d <= 1'b0;
      life_out_rsc_mgc_out_stdreg_d <= 2'b0;
      score_out_rsc_mgc_out_stdreg_d <= 10'b0;
      game_started_out_rsc_mgc_out_stdreg_d <= 1'b0;
      target_y_out_rsc_mgc_out_stdreg_d <= 10'b0;
      target_x_out_rsc_mgc_out_stdreg_d <= 10'b0;
      shot_timer_rsc_mgc_out_stdreg_d <= 2'b0;
      target_y_sva_sg3 <= 2'b0;
      target_y_sva_8 <= 5'b0;
      target_y_sva_sg2 <= 1'b0;
      target_y_sva_sg1 <= 2'b0;
      game_over_rsc_mgc_out_stdreg_d <= 1'b0;
      if_3_if_and_1_itm_1 <= 1'b0;
      target_y_sva_dfm_9_sg3 <= 2'b0;
      target_y_sva_7 <= 10'b0;
      target_y_sva_dfm_13 <= 5'b0;
      target_y_sva_dfm_9_sg2 <= 1'b0;
      target_y_sva_dfm_9_sg1 <= 2'b0;
      target_state_counter_slc_target_state_counter_itm_1 <= 1'b0;
      exit_game_engine_lpi_1_dfm_st_1 <= 1'b0;
      else_5_mux_18_itm_1_sg3 <= 2'b0;
      else_5_mux_18_itm_1_sg2 <= 1'b0;
      else_5_mux_18_itm_1_sg1 <= 2'b0;
      else_5_mux_18_itm_3 <= 5'b0;
      else_5_slc_svs_st_1 <= 1'b0;
      C1_1_1_dfmergedata_lpi_1_dfm_6 <= 1'b0;
      score_sva_dfm_6 <= 10'b0;
      game_started_sva_dfm_3 <= 1'b0;
      target_x_sg1_sg1_sva_dfm_4 <= 3'b0;
      target_x_sg1_1_sva_dfm_4 <= 3'b0;
      and_9_itm_1 <= 1'b0;
      mux_38_itm_1 <= 1'b0;
      slc_target_y_sva_dfm_itm_1_sg3 <= 1'b0;
      game_started_asn_itm_1 <= 1'b0;
      slc_target_y_sva_dfm_itm_1_sg1_1 <= 1'b0;
      else_5_and_mdf_sva_1 <= 1'b0;
      else_5_slc_1_svs_1 <= 1'b0;
      acc_2_itm_1 <= 2'b0;
      slc_mdf_sva_1 <= 1'b0;
      target_timer_sva_sg1 <= 8'b0;
      target_timer_sva_4 <= 2'b0;
      target_state_counter_sva <= 10'b0;
      target_x_sg1_sg2_sva <= 1'b0;
      target_x_sg1_sg1_sva <= 3'b0;
      target_x_sg1_1_sva <= 3'b0;
      if_3_if_acc_2_ncse_sg1_lpi_1 <= 1'b0;
      if_3_if_acc_1_ncse_sg1_lpi_1_dfm_2 <= 1'b0;
      score_sva <= 10'b0;
      game_started_sva <= 1'b0;
      fire_rate_counter_sva <= 10'b0;
      game_over_counter_sva <= 10'b0;
      main_stage_0_2 <= 1'b0;
      and_3_m1c <= 1'b0;
      misses_sva <= 2'b0;
      target_platform_sva <= 2'b0;
      else_5_and_6_psp <= 1'b0;
      C1_1_1_dfmergedata_lpi_1 <= 1'b0;
      time_counter_sva <= 10'b0;
    end
    else begin
      if ( en ) begin
        start_highlighted_rsc_mgc_out_stdreg_d <= MUX_s_1_2_2({if_3_if_and_1_itm_1
            , start_highlighted_rsc_mgc_out_stdreg_d}, or_dcpl_57 | game_started_asn_itm_1);
        target_shot_rsc_mgc_out_stdreg_d <= MUX_s_1_2_2({target_state_counter_slc_target_state_counter_itm_1
            , target_shot_rsc_mgc_out_stdreg_d}, or_dcpl_57 | (~ game_started_asn_itm_1)
            | (~ exit_game_engine_lpi_1_dfm_st_1) | else_5_slc_svs_st_1);
        shot_fired_out_rsc_mgc_out_stdreg_d <= MUX_s_1_2_2({C1_1_1_dfmergedata_lpi_1_dfm_6
            , shot_fired_out_rsc_mgc_out_stdreg_d}, or_dcpl_57 | (~ mux_38_itm_1));
        life_out_rsc_mgc_out_stdreg_d <= MUX_v_2_2_2({(~ misses_sva) , life_out_rsc_mgc_out_stdreg_d},
            or_79_cse);
        score_out_rsc_mgc_out_stdreg_d <= MUX_v_10_2_2({score_sva_dfm_6 , score_out_rsc_mgc_out_stdreg_d},
            or_79_cse);
        game_started_out_rsc_mgc_out_stdreg_d <= MUX_s_1_2_2({game_started_sva_dfm_3
            , game_started_out_rsc_mgc_out_stdreg_d}, or_79_cse);
        target_y_out_rsc_mgc_out_stdreg_d <= MUX_v_10_2_2({({target_y_sva_dfm_7_sg3
            , target_y_sva_dfm_7_sg2 , target_y_sva_dfm_7_sg1 , target_y_sva_dfm_12})
            , target_y_out_rsc_mgc_out_stdreg_d}, or_79_cse);
        target_x_out_rsc_mgc_out_stdreg_d <= MUX_v_10_2_2({({(target_x_sg1_1_sva_dfm_4[0])
            , target_x_sg1_sg1_sva_dfm_4 , target_x_sg1_1_sva_dfm_4 , 3'b0}) , target_x_out_rsc_mgc_out_stdreg_d},
            or_79_cse);
        shot_timer_rsc_mgc_out_stdreg_d <= MUX_v_2_2_2({acc_2_itm_1 , shot_timer_rsc_mgc_out_stdreg_d},
            or_dcpl_57);
        target_y_sva_sg3 <= target_y_sva_sg3_mx0;
        target_y_sva_8 <= target_y_sva_8_mx0;
        target_y_sva_sg2 <= target_y_sva_sg2_mx0;
        target_y_sva_sg1 <= target_y_sva_sg1_mx0;
        game_over_rsc_mgc_out_stdreg_d <= MUX_s_1_2_2({game_over_rsc_mgc_out_stdreg_d
            , slc_mdf_sva_1}, main_stage_0_2);
        if_3_if_and_1_itm_1 <= (if_3_if_1_acc_4_itm[2]) & (~((if_3_if_acc_2_itm[5])
            | (~ if_3_land_2_lpi_1_dfm)));
        target_y_sva_dfm_9_sg3 <= MUX_v_2_2_2({2'b1 , target_y_sva_sg3_mx0}, or_dcpl_80);
        target_y_sva_7 <= target_y_sva_4;
        target_y_sva_dfm_13 <= target_y_sva_dfm_11;
        target_y_sva_dfm_9_sg2 <= target_y_sva_dfm_2_sg2;
        target_y_sva_dfm_9_sg1 <= target_y_sva_dfm_2_sg1;
        target_state_counter_slc_target_state_counter_itm_1 <= target_state_counter_sva_dfm_1[5];
        exit_game_engine_lpi_1_dfm_st_1 <= exit_game_engine_lpi_1_dfm;
        else_5_mux_18_itm_1_sg3 <= MUX_v_2_2_2({target_y_sva_sg3_mx0 , (target_y_sva_4[9:8])},
            else_5_acc_3_itm[10]);
        else_5_mux_18_itm_1_sg2 <= MUX_s_1_2_2({target_y_sva_dfm_2_sg2 , (target_y_sva_4[7])},
            else_5_acc_3_itm[10]);
        else_5_mux_18_itm_1_sg1 <= MUX_v_2_2_2({target_y_sva_dfm_2_sg1 , (target_y_sva_4[6:5])},
            else_5_acc_3_itm[10]);
        else_5_mux_18_itm_3 <= MUX_v_5_2_2({target_y_sva_dfm_11 , (target_y_sva_4[4:0])},
            else_5_acc_3_itm[10]);
        else_5_slc_svs_st_1 <= else_5_if_acc_1_itm[9];
        C1_1_1_dfmergedata_lpi_1_dfm_6 <= C1_1_1_dfmergedata_lpi_1_dfm_6_mx0;
        score_sva_dfm_6 <= score_sva_dfm_6_mx0;
        game_started_sva_dfm_3 <= game_started_sva_dfm_3_mx0;
        target_x_sg1_sg1_sva_dfm_4 <= target_x_sg1_sg1_sva_dfm_2;
        target_x_sg1_1_sva_dfm_4 <= target_x_sg1_1_sva_dfm_2;
        and_9_itm_1 <= and_2_itm;
        mux_38_itm_1 <= MUX_s_1_2_2({shot_fired_out_rsc_d_dfmergesel_lpi_1_dfm ,
            (MUX_s_1_2_2({(shot_fired_out_rsc_d_dfmergesel_lpi_1_dfm | else_5_and_mdf_sva)
            , shot_fired_out_rsc_d_dfmergesel_lpi_1_dfm}, exit_game_engine_lpi_1_dfm_1))},
            game_started_sva);
        slc_target_y_sva_dfm_itm_1_sg3 <= if_3_land_3_lpi_1_dfm;
        game_started_asn_itm_1 <= game_started_sva;
        slc_target_y_sva_dfm_itm_1_sg1_1 <= ~ if_3_land_3_lpi_1_dfm;
        else_5_and_mdf_sva_1 <= else_5_and_mdf_sva;
        else_5_slc_1_svs_1 <= else_5_acc_3_itm[10];
        acc_2_itm_1 <= nl_acc_2_itm_1[1:0];
        slc_mdf_sva_1 <= acc_1_itm[10];
        target_timer_sva_sg1 <= MUX1HOT_v_8_4_2({target_timer_sva_sg1 , 8'b1001011
            , (((~ (score_sva[7:0])) + 8'b110011) + (score_sva[9:2])) , (target_timer_sva_5[9:2])},
            {(or_5_ssc | (acc_1_itm[10])) , (and_18_ssc & (~ (acc_1_itm[10]))) ,
            (else_5_and_6_psp_mx0 & and_2_itm & (~ (acc_1_itm[10]))) , (and_3_m1c_mx0
            & (~ (acc_1_itm[10])))});
        target_timer_sva_4 <= (MUX1HOT_v_2_3_2({(score_sva[1:0]) , (target_timer_sva_5[1:0])
            , target_timer_sva_4}, {((~ and_141_tmp) & nor_19_m1c) , (and_141_tmp
            & nor_19_m1c) , or_dcpl})) & (signext_2_1(~ and_dcpl_65));
        target_state_counter_sva <= MUX1HOT_v_10_4_2({target_state_counter_sva ,
            target_state_counter_sva_dfm_1 , (target_state_counter_sva + 10'b1111111111)
            , 10'b1}, {((~ game_started_sva) | (acc_1_itm[10])) , ((~ (else_5_if_acc_1_itm[9]))
            & or_3_m1c & (~ (acc_1_itm[10]))) , ((else_5_if_acc_1_itm[9]) & or_3_m1c
            & (~ (acc_1_itm[10]))) , ((~ else_5_or_tmp) & and_3_m1c_mx0w0 & (~ (acc_1_itm[10])))});
        target_x_sg1_sg2_sva <= MUX_s_1_2_2({((MUX_s_1_2_2({else_5_and_mdf_sva ,
            target_x_sg1_sg2_sva}, exit_game_engine_lpi_1_dfm_1)) & game_started_sva)
            , target_x_sg1_sg2_sva}, acc_1_itm[10]);
        target_x_sg1_sg1_sva <= MUX_v_3_2_2({target_x_sg1_sg1_sva_dfm_2 , target_x_sg1_sg1_sva},
            acc_1_itm[10]);
        target_x_sg1_1_sva <= MUX_v_3_2_2({target_x_sg1_1_sva_dfm_2 , target_x_sg1_1_sva},
            acc_1_itm[10]);
        if_3_if_acc_2_ncse_sg1_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({(MUX_s_1_2_2({if_3_if_acc_2_ncse_sg1_lpi_1
            , (if_3_if_acc_2_itm[5])}, if_3_land_2_lpi_1_dfm)) , if_3_if_acc_2_ncse_sg1_lpi_1},
            game_started_sva)) , if_3_if_acc_2_ncse_sg1_lpi_1}, acc_1_itm[10]);
        if_3_if_acc_1_ncse_sg1_lpi_1_dfm_2 <= MUX_s_1_2_2({(MUX_s_1_2_2({(if_3_if_acc_1_itm[6])
            , if_3_if_acc_1_ncse_sg1_lpi_1_dfm_2}, if_3_if_acc_itm[6])) , if_3_if_acc_1_ncse_sg1_lpi_1_dfm_2},
            (acc_1_itm[10]) | game_started_sva);
        score_sva <= MUX_v_10_2_2({score_sva_dfm_6_mx0 , score_sva}, acc_1_itm[10]);
        game_started_sva <= MUX_s_1_2_2({game_started_sva_dfm_3_mx0 , game_started_sva},
            acc_1_itm[10]);
        fire_rate_counter_sva <= MUX_v_10_2_2({fire_rate_counter_sva_dfm_1 , fire_rate_counter_sva},
            acc_1_itm[10]);
        game_over_counter_sva <= MUX1HOT_v_10_3_2({game_over_counter_sva , 10'b10110100
            , (game_over_counter_sva + 10'b1111111111)}, {((~(game_started_sva |
            (acc_1_itm[10]))) | ((~ else_5_and_8_tmp) & and_29_m1c)) , (else_5_and_8_tmp
            & and_29_m1c) , (acc_1_itm[10])});
        main_stage_0_2 <= 1'b1;
        and_3_m1c <= and_3_m1c_mx0;
        misses_sva <= ~((~((MUX_v_2_2_2({misses_sva , else_5_asn_mx0w1}, (~ else_5_or_tmp)
            & and_dcpl_70)) | (signext_2_1((~(and_64_cse | (else_5_if_acc_1_itm[9])
            | (acc_1_itm[10]) | (target_state_counter_sva[0]) | (~ game_started_sva)))
            & (~(and_dcpl_70 | and_dcpl_75)))))) | ({{1{and_dcpl_75}}, and_dcpl_75}));
        target_platform_sva <= MUX_v_2_2_2({(conv_u2u_1_2(else_5_else_if_acc_16_itm[1])
            + conv_u2u_1_2(else_5_else_if_acc_16_itm[2])) , target_platform_sva},
            or_dcpl_80 | (~ game_started_sva) | (acc_1_itm[10]));
        else_5_and_6_psp <= MUX_s_1_2_2({else_5_and_5_ssc_1 , else_5_and_6_psp},
            (acc_1_itm[10]) | (~ game_started_sva));
        C1_1_1_dfmergedata_lpi_1 <= MUX_s_1_2_2({C1_1_1_dfmergedata_lpi_1_dfm_6_mx0
            , C1_1_1_dfmergedata_lpi_1}, acc_1_itm[10]);
        time_counter_sva <= time_counter_sva_1;
      end
    end
  end
  assign nl_acc_2_itm_1  = (fire_rate_counter_sva_dfm_1[4:3]) + conv_u2u_1_2((fire_rate_counter_sva_dfm_1[0])
      | (fire_rate_counter_sva_dfm_1[1]) | (fire_rate_counter_sva_dfm_1[2]));

  function [1:0] MUX_v_2_2_2;
    input [3:0] inputs;
    input [0:0] sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[3:2];
      end
      1'b1 : begin
        result = inputs[1:0];
      end
      default : begin
        result = inputs[3:2];
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function [4:0] MUX_v_5_2_2;
    input [9:0] inputs;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[9:5];
      end
      1'b1 : begin
        result = inputs[4:0];
      end
      default : begin
        result = inputs[9:5];
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function [1:0] MUX1HOT_v_2_3_2;
    input [5:0] inputs;
    input [2:0] sel;
    reg [1:0] result;
    integer i;
  begin
    result = inputs[0+:2] & {2{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*2+:2] & {2{sel[i]}});
    MUX1HOT_v_2_3_2 = result;
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [4:0] MUX1HOT_v_5_4_2;
    input [19:0] inputs;
    input [3:0] sel;
    reg [4:0] result;
    integer i;
  begin
    result = inputs[0+:5] & {5{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*5+:5] & {5{sel[i]}});
    MUX1HOT_v_5_4_2 = result;
  end
  endfunction


  function [4:0] signext_5_1;
    input [0:0] vector;
  begin
    signext_5_1= {{4{vector[0]}}, vector};
  end
  endfunction


  function [9:0] MUX_v_10_2_2;
    input [19:0] inputs;
    input [0:0] sel;
    reg [9:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[19:10];
      end
      1'b1 : begin
        result = inputs[9:0];
      end
      default : begin
        result = inputs[19:10];
      end
    endcase
    MUX_v_10_2_2 = result;
  end
  endfunction


  function [9:0] signext_10_1;
    input [0:0] vector;
  begin
    signext_10_1= {{9{vector[0]}}, vector};
  end
  endfunction


  function [2:0] MUX1HOT_v_3_3_2;
    input [8:0] inputs;
    input [2:0] sel;
    reg [2:0] result;
    integer i;
  begin
    result = inputs[0+:3] & {3{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*3+:3] & {3{sel[i]}});
    MUX1HOT_v_3_3_2 = result;
  end
  endfunction


  function [2:0] MUX1HOT_v_3_4_2;
    input [11:0] inputs;
    input [3:0] sel;
    reg [2:0] result;
    integer i;
  begin
    result = inputs[0+:3] & {3{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*3+:3] & {3{sel[i]}});
    MUX1HOT_v_3_4_2 = result;
  end
  endfunction


  function [9:0] MUX1HOT_v_10_3_2;
    input [29:0] inputs;
    input [2:0] sel;
    reg [9:0] result;
    integer i;
  begin
    result = inputs[0+:10] & {10{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*10+:10] & {10{sel[i]}});
    MUX1HOT_v_10_3_2 = result;
  end
  endfunction


  function [3:0] readslicef_5_4_1;
    input [4:0] vector;
    reg [4:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_5_4_1 = tmp[3:0];
  end
  endfunction


  function [2:0] readslicef_4_3_1;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_4_3_1 = tmp[2:0];
  end
  endfunction


  function [1:0] readslicef_3_2_1;
    input [2:0] vector;
    reg [2:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_3_2_1 = tmp[1:0];
  end
  endfunction


  function [7:0] MUX1HOT_v_8_4_2;
    input [31:0] inputs;
    input [3:0] sel;
    reg [7:0] result;
    integer i;
  begin
    result = inputs[0+:8] & {8{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*8+:8] & {8{sel[i]}});
    MUX1HOT_v_8_4_2 = result;
  end
  endfunction


  function [9:0] MUX1HOT_v_10_4_2;
    input [39:0] inputs;
    input [3:0] sel;
    reg [9:0] result;
    integer i;
  begin
    result = inputs[0+:10] & {10{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*10+:10] & {10{sel[i]}});
    MUX1HOT_v_10_4_2 = result;
  end
  endfunction


  function [2:0] MUX_v_3_2_2;
    input [5:0] inputs;
    input [0:0] sel;
    reg [2:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[5:3];
      end
      1'b1 : begin
        result = inputs[2:0];
      end
      default : begin
        result = inputs[5:3];
      end
    endcase
    MUX_v_3_2_2 = result;
  end
  endfunction


  function  [9:0] conv_u2u_9_10 ;
    input [8:0]  vector ;
  begin
    conv_u2u_9_10 = {1'b0, vector};
  end
  endfunction


  function  [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction


  function signed [11:0] conv_u2s_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2s_11_12 = {1'b0, vector};
  end
  endfunction


  function  [10:0] conv_u2u_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_11 = {1'b0, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [8:0] conv_u2u_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_9 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function  [6:0] conv_u2u_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_7 = {1'b0, vector};
  end
  endfunction


  function signed [2:0] conv_u2s_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_3 = {1'b0, vector};
  end
  endfunction


  function signed [2:0] conv_s2s_2_3 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_3 = {vector[1], vector};
  end
  endfunction


  function signed [1:0] conv_s2s_1_2 ;
    input signed [0:0]  vector ;
  begin
    conv_s2s_1_2 = {vector[0], vector};
  end
  endfunction


  function signed [1:0] conv_u2s_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2s_1_2 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction


  function  [4:0] conv_u2u_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [19:0] conv_u2u_10_20 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_20 = {{10{1'b0}}, vector};
  end
  endfunction


  function  [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    game_engine
//  Generated from file(s):
//    5) $PROJECT_HOME/game_engine.cpp
// ------------------------------------------------------------------


module game_engine (
  crosshair_x_rsc_z, crosshair_y_rsc_z, shot_attempted_rsc_z, shot_timer_rsc_z, target_x_out_rsc_z,
      target_y_out_rsc_z, target_shot_rsc_z, score_out_rsc_z, life_out_rsc_z, shot_fired_out_rsc_z,
      game_started_out_rsc_z, game_over_rsc_z, start_highlighted_rsc_z, clk, en,
      arst_n
);
  input [9:0] crosshair_x_rsc_z;
  input [9:0] crosshair_y_rsc_z;
  input shot_attempted_rsc_z;
  output [1:0] shot_timer_rsc_z;
  output [9:0] target_x_out_rsc_z;
  output [9:0] target_y_out_rsc_z;
  output target_shot_rsc_z;
  output [9:0] score_out_rsc_z;
  output [1:0] life_out_rsc_z;
  output shot_fired_out_rsc_z;
  output game_started_out_rsc_z;
  output game_over_rsc_z;
  output start_highlighted_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [9:0] crosshair_x_rsc_mgc_in_wire_d;
  wire [9:0] crosshair_y_rsc_mgc_in_wire_d;
  wire shot_attempted_rsc_mgc_in_wire_d;
  wire [1:0] shot_timer_rsc_mgc_out_stdreg_d;
  wire [9:0] target_x_out_rsc_mgc_out_stdreg_d;
  wire [9:0] target_y_out_rsc_mgc_out_stdreg_d;
  wire target_shot_rsc_mgc_out_stdreg_d;
  wire [9:0] score_out_rsc_mgc_out_stdreg_d;
  wire [1:0] life_out_rsc_mgc_out_stdreg_d;
  wire shot_fired_out_rsc_mgc_out_stdreg_d;
  wire game_started_out_rsc_mgc_out_stdreg_d;
  wire game_over_rsc_mgc_out_stdreg_d;
  wire start_highlighted_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(10)) crosshair_x_rsc_mgc_in_wire (
      .d(crosshair_x_rsc_mgc_in_wire_d),
      .z(crosshair_x_rsc_z)
    );
  mgc_in_wire #(.rscid(2),
  .width(10)) crosshair_y_rsc_mgc_in_wire (
      .d(crosshair_y_rsc_mgc_in_wire_d),
      .z(crosshair_y_rsc_z)
    );
  mgc_in_wire #(.rscid(3),
  .width(1)) shot_attempted_rsc_mgc_in_wire (
      .d(shot_attempted_rsc_mgc_in_wire_d),
      .z(shot_attempted_rsc_z)
    );
  mgc_out_stdreg #(.rscid(4),
  .width(2)) shot_timer_rsc_mgc_out_stdreg (
      .d(shot_timer_rsc_mgc_out_stdreg_d),
      .z(shot_timer_rsc_z)
    );
  mgc_out_stdreg #(.rscid(5),
  .width(10)) target_x_out_rsc_mgc_out_stdreg (
      .d(target_x_out_rsc_mgc_out_stdreg_d),
      .z(target_x_out_rsc_z)
    );
  mgc_out_stdreg #(.rscid(6),
  .width(10)) target_y_out_rsc_mgc_out_stdreg (
      .d(target_y_out_rsc_mgc_out_stdreg_d),
      .z(target_y_out_rsc_z)
    );
  mgc_out_stdreg #(.rscid(7),
  .width(1)) target_shot_rsc_mgc_out_stdreg (
      .d(target_shot_rsc_mgc_out_stdreg_d),
      .z(target_shot_rsc_z)
    );
  mgc_out_stdreg #(.rscid(8),
  .width(10)) score_out_rsc_mgc_out_stdreg (
      .d(score_out_rsc_mgc_out_stdreg_d),
      .z(score_out_rsc_z)
    );
  mgc_out_stdreg #(.rscid(9),
  .width(2)) life_out_rsc_mgc_out_stdreg (
      .d(life_out_rsc_mgc_out_stdreg_d),
      .z(life_out_rsc_z)
    );
  mgc_out_stdreg #(.rscid(10),
  .width(1)) shot_fired_out_rsc_mgc_out_stdreg (
      .d(shot_fired_out_rsc_mgc_out_stdreg_d),
      .z(shot_fired_out_rsc_z)
    );
  mgc_out_stdreg #(.rscid(11),
  .width(1)) game_started_out_rsc_mgc_out_stdreg (
      .d(game_started_out_rsc_mgc_out_stdreg_d),
      .z(game_started_out_rsc_z)
    );
  mgc_out_stdreg #(.rscid(12),
  .width(1)) game_over_rsc_mgc_out_stdreg (
      .d(game_over_rsc_mgc_out_stdreg_d),
      .z(game_over_rsc_z)
    );
  mgc_out_stdreg #(.rscid(13),
  .width(1)) start_highlighted_rsc_mgc_out_stdreg (
      .d(start_highlighted_rsc_mgc_out_stdreg_d),
      .z(start_highlighted_rsc_z)
    );
  game_engine_core game_engine_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .crosshair_x_rsc_mgc_in_wire_d(crosshair_x_rsc_mgc_in_wire_d),
      .crosshair_y_rsc_mgc_in_wire_d(crosshair_y_rsc_mgc_in_wire_d),
      .shot_attempted_rsc_mgc_in_wire_d(shot_attempted_rsc_mgc_in_wire_d),
      .shot_timer_rsc_mgc_out_stdreg_d(shot_timer_rsc_mgc_out_stdreg_d),
      .target_x_out_rsc_mgc_out_stdreg_d(target_x_out_rsc_mgc_out_stdreg_d),
      .target_y_out_rsc_mgc_out_stdreg_d(target_y_out_rsc_mgc_out_stdreg_d),
      .target_shot_rsc_mgc_out_stdreg_d(target_shot_rsc_mgc_out_stdreg_d),
      .score_out_rsc_mgc_out_stdreg_d(score_out_rsc_mgc_out_stdreg_d),
      .life_out_rsc_mgc_out_stdreg_d(life_out_rsc_mgc_out_stdreg_d),
      .shot_fired_out_rsc_mgc_out_stdreg_d(shot_fired_out_rsc_mgc_out_stdreg_d),
      .game_started_out_rsc_mgc_out_stdreg_d(game_started_out_rsc_mgc_out_stdreg_d),
      .game_over_rsc_mgc_out_stdreg_d(game_over_rsc_mgc_out_stdreg_d),
      .start_highlighted_rsc_mgc_out_stdreg_d(start_highlighted_rsc_mgc_out_stdreg_d)
    );
endmodule



