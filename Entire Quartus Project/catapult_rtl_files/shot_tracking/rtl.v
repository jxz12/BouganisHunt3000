// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   jxz12@EEWS104A-020
//  Generated date: Thu May 16 14:08:58 2013
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    shot_tracking_core
// ------------------------------------------------------------------


module shot_tracking_core (
  clk, en, arst_n, tracked_blue_rsc_mgc_in_wire_d, frame_x_in_rsc_mgc_in_wire_d,
      frame_y_in_rsc_mgc_in_wire_d, previous_rsc_mgc_out_stdreg_d, current_rsc_mgc_out_stdreg_d,
      shot_attempted_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input tracked_blue_rsc_mgc_in_wire_d;
  input [9:0] frame_x_in_rsc_mgc_in_wire_d;
  input [9:0] frame_y_in_rsc_mgc_in_wire_d;
  output previous_rsc_mgc_out_stdreg_d;
  reg previous_rsc_mgc_out_stdreg_d;
  output current_rsc_mgc_out_stdreg_d;
  reg current_rsc_mgc_out_stdreg_d;
  output shot_attempted_rsc_mgc_out_stdreg_d;
  reg shot_attempted_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  wire if_1_nor_tmp;
  reg current_cycle_there_sva;
  reg previous_cycle_there_sva;
  wire current_cycle_there_sva_dfm;


  // Interconnect Declarations for Component Instantiations 
  assign current_cycle_there_sva_dfm = current_cycle_there_sva | tracked_blue_rsc_mgc_in_wire_d;
  assign if_1_nor_tmp = ~((frame_y_in_rsc_mgc_in_wire_d[9]) | (frame_y_in_rsc_mgc_in_wire_d[8])
      | (frame_y_in_rsc_mgc_in_wire_d[7]) | (frame_y_in_rsc_mgc_in_wire_d[6]) | (frame_y_in_rsc_mgc_in_wire_d[5])
      | (frame_y_in_rsc_mgc_in_wire_d[4]) | (frame_y_in_rsc_mgc_in_wire_d[3]) | (frame_y_in_rsc_mgc_in_wire_d[2])
      | (frame_y_in_rsc_mgc_in_wire_d[1]) | (frame_y_in_rsc_mgc_in_wire_d[0]) | (frame_x_in_rsc_mgc_in_wire_d[9])
      | (frame_x_in_rsc_mgc_in_wire_d[8]) | (frame_x_in_rsc_mgc_in_wire_d[7]) | (frame_x_in_rsc_mgc_in_wire_d[6])
      | (frame_x_in_rsc_mgc_in_wire_d[5]) | (frame_x_in_rsc_mgc_in_wire_d[4]) | (frame_x_in_rsc_mgc_in_wire_d[3])
      | (frame_x_in_rsc_mgc_in_wire_d[2]) | (frame_x_in_rsc_mgc_in_wire_d[1]) | (frame_x_in_rsc_mgc_in_wire_d[0]));
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      shot_attempted_rsc_mgc_out_stdreg_d <= 1'b0;
      current_rsc_mgc_out_stdreg_d <= 1'b0;
      previous_rsc_mgc_out_stdreg_d <= 1'b0;
      previous_cycle_there_sva <= 1'b0;
      current_cycle_there_sva <= 1'b0;
    end
    else begin
      if ( en ) begin
        shot_attempted_rsc_mgc_out_stdreg_d <= MUX_s_1_2_2({shot_attempted_rsc_mgc_out_stdreg_d
            , (previous_cycle_there_sva & (~ current_cycle_there_sva_dfm))}, if_1_nor_tmp);
        current_rsc_mgc_out_stdreg_d <= MUX_s_1_2_2({current_rsc_mgc_out_stdreg_d
            , current_cycle_there_sva_dfm}, if_1_nor_tmp);
        previous_rsc_mgc_out_stdreg_d <= MUX_s_1_2_2({previous_rsc_mgc_out_stdreg_d
            , previous_cycle_there_sva}, if_1_nor_tmp);
        previous_cycle_there_sva <= MUX_s_1_2_2({previous_cycle_there_sva , current_cycle_there_sva_dfm},
            if_1_nor_tmp);
        current_cycle_there_sva <= current_cycle_there_sva_dfm & (~ if_1_nor_tmp);
      end
    end
  end

  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    shot_tracking
//  Generated from file(s):
//    2) $PROJECT_HOME/shot_tracking.cpp
// ------------------------------------------------------------------


module shot_tracking (
  tracked_blue_rsc_z, frame_x_in_rsc_z, frame_y_in_rsc_z, previous_rsc_z, current_rsc_z,
      shot_attempted_rsc_z, clk, en, arst_n
);
  input tracked_blue_rsc_z;
  input [9:0] frame_x_in_rsc_z;
  input [9:0] frame_y_in_rsc_z;
  output previous_rsc_z;
  output current_rsc_z;
  output shot_attempted_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire tracked_blue_rsc_mgc_in_wire_d;
  wire [9:0] frame_x_in_rsc_mgc_in_wire_d;
  wire [9:0] frame_y_in_rsc_mgc_in_wire_d;
  wire previous_rsc_mgc_out_stdreg_d;
  wire current_rsc_mgc_out_stdreg_d;
  wire shot_attempted_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(1)) tracked_blue_rsc_mgc_in_wire (
      .d(tracked_blue_rsc_mgc_in_wire_d),
      .z(tracked_blue_rsc_z)
    );
  mgc_in_wire #(.rscid(2),
  .width(10)) frame_x_in_rsc_mgc_in_wire (
      .d(frame_x_in_rsc_mgc_in_wire_d),
      .z(frame_x_in_rsc_z)
    );
  mgc_in_wire #(.rscid(3),
  .width(10)) frame_y_in_rsc_mgc_in_wire (
      .d(frame_y_in_rsc_mgc_in_wire_d),
      .z(frame_y_in_rsc_z)
    );
  mgc_out_stdreg #(.rscid(4),
  .width(1)) previous_rsc_mgc_out_stdreg (
      .d(previous_rsc_mgc_out_stdreg_d),
      .z(previous_rsc_z)
    );
  mgc_out_stdreg #(.rscid(5),
  .width(1)) current_rsc_mgc_out_stdreg (
      .d(current_rsc_mgc_out_stdreg_d),
      .z(current_rsc_z)
    );
  mgc_out_stdreg #(.rscid(6),
  .width(1)) shot_attempted_rsc_mgc_out_stdreg (
      .d(shot_attempted_rsc_mgc_out_stdreg_d),
      .z(shot_attempted_rsc_z)
    );
  shot_tracking_core shot_tracking_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .tracked_blue_rsc_mgc_in_wire_d(tracked_blue_rsc_mgc_in_wire_d),
      .frame_x_in_rsc_mgc_in_wire_d(frame_x_in_rsc_mgc_in_wire_d),
      .frame_y_in_rsc_mgc_in_wire_d(frame_y_in_rsc_mgc_in_wire_d),
      .previous_rsc_mgc_out_stdreg_d(previous_rsc_mgc_out_stdreg_d),
      .current_rsc_mgc_out_stdreg_d(current_rsc_mgc_out_stdreg_d),
      .shot_attempted_rsc_mgc_out_stdreg_d(shot_attempted_rsc_mgc_out_stdreg_d)
    );
endmodule



