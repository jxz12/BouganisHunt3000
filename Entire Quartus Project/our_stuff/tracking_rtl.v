// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   jxz12@EEWS104A-020
//  Generated date: Fri May 10 10:47:42 2013
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    tracking_core_fsm
//  FSM Module
// ------------------------------------------------------------------


module tracking_core_fsm (
  clk, en, arst_n, fsm_output
);
  input clk;
  input en;
  input arst_n;
  output [1:0] fsm_output;
  reg [1:0] fsm_output;


  // FSM State Type Declaration for tracking_core_fsm_1
  parameter
    st_main = 1'd0,
    st_main_1 = 1'd1,
    state_x = 1'b0;

  reg [0:0] state_var;
  reg [0:0] state_var_NS;


  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : tracking_core_fsm_1
    case (state_var)
      st_main : begin
        fsm_output = 2'b1;
        state_var_NS = st_main_1;
      end
      st_main_1 : begin
        fsm_output = 2'b10;
        state_var_NS = st_main;
      end
      default : begin
        fsm_output = 2'b00;
        state_var_NS = st_main;
      end
    endcase
  end

  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      state_var <= st_main;
    end
    else if ( en ) begin
      state_var <= state_var_NS;
    end
  end

endmodule

// ------------------------------------------------------------------
//  Design Unit:    tracking_core
// ------------------------------------------------------------------


module tracking_core (
  clk, en, arst_n, tracked_green_rsc_mgc_in_wire_d, frame_x_in_rsc_mgc_in_wire_d,
      frame_y_in_rsc_mgc_in_wire_d, x_out_rsc_mgc_out_stdreg_d, y_out_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input tracked_green_rsc_mgc_in_wire_d;
  input [9:0] frame_x_in_rsc_mgc_in_wire_d;
  input [9:0] frame_y_in_rsc_mgc_in_wire_d;
  output [9:0] x_out_rsc_mgc_out_stdreg_d;
  reg [9:0] x_out_rsc_mgc_out_stdreg_d;
  output [9:0] y_out_rsc_mgc_out_stdreg_d;
  reg [9:0] y_out_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  wire [1:0] fsm_output;
  wire [5:0] div_3_for_acc_3_tmp;
  wire [6:0] nl_div_3_for_acc_3_tmp;
  wire [5:0] div_1_for_acc_3_tmp;
  wire [6:0] nl_div_1_for_acc_3_tmp;
  wire if_1_or_1_tmp;
  wire mux_8_tmp;
  wire or_dcpl_63;
  wire or_dcpl_68;
  wire or_dcpl_91;
  wire mux_tmp_8;
  reg asn_sft_lpi_1;
  reg sfi_exit_tracking_lpi_1;
  reg div_dividend_1_sg15_lpi_1;
  reg div_dividend_1_sg16_lpi_1;
  reg div_dividend_1_sg14_lpi_1;
  reg div_dividend_1_sg17_lpi_1;
  reg div_dividend_1_sg13_lpi_1;
  reg div_dividend_1_sg18_lpi_1;
  reg div_dividend_1_sg12_lpi_1;
  reg div_dividend_1_sg19_lpi_1;
  reg div_dividend_1_sg11_lpi_1;
  reg div_dividend_1_sg20_lpi_1;
  reg div_dividend_1_sg10_lpi_1;
  reg div_dividend_1_sg21_lpi_1;
  reg div_dividend_1_sg9_lpi_1;
  reg div_dividend_1_sg22_lpi_1;
  reg div_dividend_1_sg8_lpi_1;
  reg div_dividend_1_sg23_lpi_1;
  reg div_dividend_1_sg7_lpi_1;
  reg div_dividend_1_sg24_lpi_1;
  reg div_dividend_1_sg6_lpi_1;
  reg div_dividend_1_sg25_lpi_1;
  reg div_dividend_1_sg5_lpi_1;
  reg div_dividend_1_sg26_lpi_1;
  reg div_dividend_1_sg4_lpi_1;
  reg div_dividend_1_sg27_lpi_1;
  reg div_dividend_1_sg3_lpi_1;
  reg div_dividend_1_sg28_lpi_1;
  reg div_dividend_1_sg2_lpi_1;
  reg div_dividend_1_sg29_lpi_1;
  reg div_dividend_1_sg1_lpi_1;
  reg div_dividend_1_sg30_lpi_1;
  reg div_dividend_4_lpi_1;
  reg div_dividend_1_sg31_lpi_1;
  reg div_1_Q_sg4_lpi_1;
  reg div_1_Q_sg5_lpi_1;
  reg div_1_Q_sg3_lpi_1;
  reg div_1_Q_sg6_lpi_1;
  reg div_1_Q_sg2_lpi_1;
  reg div_1_Q_sg7_lpi_1;
  reg div_1_Q_sg1_lpi_1;
  reg div_1_Q_sg8_lpi_1;
  reg div_1_Q_1_lpi_1;
  reg [20:0] div_1_R_lpi_1;
  reg [19:0] div_1_neg_divisor_1_lpi_1;
  reg div_dividend_3_sg15_lpi_1;
  reg div_dividend_3_sg16_lpi_1;
  reg div_dividend_3_sg14_lpi_1;
  reg div_dividend_3_sg17_lpi_1;
  reg div_dividend_3_sg13_lpi_1;
  reg div_dividend_3_sg18_lpi_1;
  reg div_dividend_3_sg12_lpi_1;
  reg div_dividend_3_sg19_lpi_1;
  reg div_dividend_3_sg11_lpi_1;
  reg div_dividend_3_sg20_lpi_1;
  reg div_dividend_3_sg10_lpi_1;
  reg div_dividend_3_sg21_lpi_1;
  reg div_dividend_3_sg9_lpi_1;
  reg div_dividend_3_sg22_lpi_1;
  reg div_dividend_3_sg8_lpi_1;
  reg div_dividend_3_sg23_lpi_1;
  reg div_dividend_3_sg7_lpi_1;
  reg div_dividend_3_sg24_lpi_1;
  reg div_dividend_3_sg6_lpi_1;
  reg div_dividend_3_sg25_lpi_1;
  reg div_dividend_3_sg5_lpi_1;
  reg div_dividend_3_sg26_lpi_1;
  reg div_dividend_3_sg4_lpi_1;
  reg div_dividend_3_sg27_lpi_1;
  reg div_dividend_3_sg3_lpi_1;
  reg div_dividend_3_sg28_lpi_1;
  reg div_dividend_3_sg2_lpi_1;
  reg div_dividend_3_sg29_lpi_1;
  reg div_dividend_3_sg1_lpi_1;
  reg div_dividend_3_sg30_lpi_1;
  reg div_dividend_5_lpi_1;
  reg div_dividend_3_sg31_lpi_1;
  reg div_3_Q_sg4_lpi_1;
  reg div_3_Q_sg5_lpi_1;
  reg div_3_Q_sg3_lpi_1;
  reg div_3_Q_sg6_lpi_1;
  reg div_3_Q_sg2_lpi_1;
  reg div_3_Q_sg7_lpi_1;
  reg div_3_Q_sg1_lpi_1;
  reg div_3_Q_sg8_lpi_1;
  reg div_3_Q_1_lpi_1;
  reg [20:0] div_3_R_lpi_1;
  reg [31:0] x_total_sva;
  reg [31:0] y_total_sva;
  reg [19:0] count_sva;
  reg exit_div_1_for_sva;
  reg asn_sft_1_lpi_1_dfm;
  reg [31:0] x_total_sva_dfm_5;
  reg [31:0] y_total_sva_dfm_5;
  reg [19:0] count_sva_dfm_5;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_1_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_2_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_3_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_4_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_5_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_6_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_7_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_8_itm_1;
  reg if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_9_itm_1;
  reg main_stage_0_2;
  reg C240_10_dfmergedata_lpi_1_sg9;
  reg C240_10_dfmergedata_lpi_1_sg8;
  reg C240_10_dfmergedata_lpi_1_sg7;
  reg C240_10_dfmergedata_lpi_1_sg6;
  reg C240_10_dfmergedata_lpi_1_sg5;
  reg C240_10_dfmergedata_lpi_1_sg4;
  reg C240_10_dfmergedata_lpi_1_sg3;
  reg C240_10_dfmergedata_lpi_1_sg2;
  reg C240_10_dfmergedata_lpi_1_sg1;
  reg C240_10_dfmergedata_lpi_3;
  reg [4:0] div_1_for_i_1_lpi_3;
  reg [4:0] div_3_for_i_1_lpi_3;
  wire and_196_cse;
  wire sfi_exit_tracking_lpi_1_dfm;
  wire or_72_cse;
  wire or_104_cse;
  wire asn_sft_lpi_1_dfm_mx0;
  wire and_203_cse;
  wire and_dcpl;
  wire or_dcpl_148;
  wire exit_div_1_for_sva_2;
  wire [19:0] z_out;
  wire [20:0] nl_z_out;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg9;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg8;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg7;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg6;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg5;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg4;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg3;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg2;
  wire C240_10_dfmergedata_lpi_1_dfm_3_sg1;
  wire C240_10_dfmergedata_lpi_1_dfm_5;
  wire if_1_and_24_tmp;
  wire if_1_and_28_cse;
  wire [20:0] div_3_R_sva_1;
  wire [21:0] nl_div_3_R_sva_1;
  wire div_3_Q_sg7_lpi_1_dfm;
  wire div_3_Q_1_lpi_1_dfm;
  wire div_3_Q_sg6_lpi_1_dfm;
  wire div_3_Q_sg1_lpi_1_dfm;
  wire div_3_Q_sg5_lpi_1_dfm;
  wire div_3_Q_sg2_lpi_1_dfm;
  wire div_3_Q_sg4_lpi_1_dfm;
  wire div_3_Q_sg3_lpi_1_dfm;
  wire div_1_Q_sg7_lpi_1_dfm;
  wire div_1_Q_sg6_lpi_1_dfm;
  wire div_1_Q_sg5_lpi_1_dfm;
  wire div_1_Q_sg4_lpi_1_dfm;
  wire div_1_Q_sg3_lpi_1_dfm;
  wire div_1_Q_sg2_lpi_1_dfm;
  wire div_1_Q_sg1_lpi_1_dfm;
  wire div_1_Q_1_lpi_1_dfm;
  wire [20:0] div_1_R_sva_1;
  wire [21:0] nl_div_1_R_sva_1;
  wire [20:0] div_3_R_lpi_1_dfm;
  wire [19:0] div_1_neg_divisor_1_lpi_1_dfm_mx0;
  wire [20:0] div_1_R_lpi_1_dfm;
  wire if_1_nor_mx0w0;
  wire nor_19_tmp;
  wire mux_315_itm;

  wire[0:0] mux_306_nl;
  wire[0:0] if_1_mux_207_nl;
  wire[0:0] if_1_mux_205_nl;
  wire[0:0] if_1_mux_203_nl;
  wire[0:0] if_1_mux_201_nl;
  wire[0:0] if_1_mux_199_nl;
  wire[0:0] if_1_mux_nl;
  wire[0:0] if_1_mux_200_nl;
  wire[0:0] if_1_mux_202_nl;
  wire[0:0] if_1_mux_204_nl;
  wire[0:0] if_1_mux_206_nl;
  wire[0:0] if_1_mux_57_nl;
  wire[19:0] div_3_for_mux_nl;
  wire[0:0] if_1_mux_25_nl;
  wire[19:0] div_1_for_mux_nl;
  wire[19:0] mux_314_nl;

  // Interconnect Declarations for Component Instantiations 
  tracking_core_fsm tracking_core_fsm_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .fsm_output(fsm_output)
    );
  assign mux_306_nl = MUX_s_1_2_2({((~ exit_div_1_for_sva) | if_1_or_1_tmp) , (~(exit_div_1_for_sva
      | (~ asn_sft_lpi_1)))}, (div_3_for_acc_3_tmp[5]) & (div_1_for_acc_3_tmp[5]));
  assign or_72_cse = (mux_306_nl) | or_dcpl_63;
  assign or_104_cse = (~ mux_tmp_8) | or_dcpl_63;
  assign and_203_cse = sfi_exit_tracking_lpi_1_dfm & (~ asn_sft_lpi_1_dfm_mx0);
  assign nor_19_tmp = ~(sfi_exit_tracking_lpi_1 | exit_div_1_for_sva);
  assign mux_315_itm = MUX_s_1_2_2({asn_sft_1_lpi_1_dfm , if_1_nor_mx0w0}, exit_div_1_for_sva);
  assign exit_div_1_for_sva_2 = (div_1_for_acc_3_tmp[5]) & (div_3_for_acc_3_tmp[5]);
  assign asn_sft_lpi_1_dfm_mx0 = MUX_s_1_2_2({asn_sft_lpi_1 , (~ if_1_or_1_tmp)},
      exit_div_1_for_sva);
  assign sfi_exit_tracking_lpi_1_dfm = sfi_exit_tracking_lpi_1 | exit_div_1_for_sva;
  assign if_1_mux_207_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg9 , (div_3_Q_sg8_lpi_1
      & (~ sfi_exit_tracking_lpi_1_dfm))}, if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg9 = (if_1_mux_207_nl) & (~ if_1_and_28_cse);
  assign if_1_mux_205_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg8 , div_3_Q_sg7_lpi_1_dfm},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg8 = (if_1_mux_205_nl) & (~ if_1_and_28_cse);
  assign if_1_mux_203_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg7 , div_3_Q_sg6_lpi_1_dfm},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg7 = (if_1_mux_203_nl) | if_1_and_28_cse;
  assign if_1_mux_201_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg6 , div_3_Q_sg5_lpi_1_dfm},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg6 = (if_1_mux_201_nl) | if_1_and_28_cse;
  assign if_1_mux_199_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg5 , div_3_Q_sg4_lpi_1_dfm},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg5 = (if_1_mux_199_nl) | if_1_and_28_cse;
  assign if_1_mux_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg4 , div_3_Q_sg3_lpi_1_dfm},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg4 = (if_1_mux_nl) | if_1_and_28_cse;
  assign if_1_mux_200_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg3 , div_3_Q_sg2_lpi_1_dfm},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg3 = (if_1_mux_200_nl) & (~ if_1_and_28_cse);
  assign if_1_mux_202_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg2 , div_3_Q_sg1_lpi_1_dfm},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg2 = (if_1_mux_202_nl) & (~ if_1_and_28_cse);
  assign if_1_mux_204_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_sg1 , div_3_Q_1_lpi_1_dfm},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_3_sg1 = (if_1_mux_204_nl) & (~ if_1_and_28_cse);
  assign if_1_mux_206_nl = MUX_s_1_2_2({C240_10_dfmergedata_lpi_3 , (~ (div_3_R_sva_1[20]))},
      if_1_and_24_tmp);
  assign C240_10_dfmergedata_lpi_1_dfm_5 = (if_1_mux_206_nl) & (~ if_1_and_28_cse);
  assign if_1_and_24_tmp = exit_div_1_for_sva_2 & (~ asn_sft_lpi_1_dfm_mx0);
  assign if_1_and_28_cse = (~ if_1_or_1_tmp) & exit_div_1_for_sva & (~ if_1_and_24_tmp);
  assign if_1_mux_57_nl = MUX_s_1_2_2({div_dividend_3_sg31_lpi_1 , (y_total_sva_dfm_5[31])},
      sfi_exit_tracking_lpi_1_dfm);
  assign div_3_for_mux_nl = MUX_v_20_2_2({div_1_neg_divisor_1_lpi_1_dfm_mx0 , count_sva_dfm_5},
      div_3_R_lpi_1_dfm[20]);
  assign nl_div_3_R_sva_1 = ({(div_3_R_lpi_1_dfm[19:0]) , (if_1_mux_57_nl)}) + ({(~
      (div_3_R_lpi_1_dfm[20])) , (div_3_for_mux_nl)});
  assign div_3_R_sva_1 = nl_div_3_R_sva_1[20:0];
  assign div_3_Q_sg7_lpi_1_dfm = div_3_Q_sg7_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_3_Q_1_lpi_1_dfm = div_3_Q_1_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_3_Q_sg6_lpi_1_dfm = div_3_Q_sg6_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_3_Q_sg1_lpi_1_dfm = div_3_Q_sg1_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_3_Q_sg5_lpi_1_dfm = div_3_Q_sg5_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_3_Q_sg2_lpi_1_dfm = div_3_Q_sg2_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_3_Q_sg4_lpi_1_dfm = div_3_Q_sg4_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_3_Q_sg3_lpi_1_dfm = div_3_Q_sg3_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_1_Q_sg7_lpi_1_dfm = div_1_Q_sg7_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_1_Q_sg6_lpi_1_dfm = div_1_Q_sg6_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_1_Q_sg5_lpi_1_dfm = div_1_Q_sg5_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_1_Q_sg4_lpi_1_dfm = div_1_Q_sg4_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_1_Q_sg3_lpi_1_dfm = div_1_Q_sg3_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_1_Q_sg2_lpi_1_dfm = div_1_Q_sg2_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_1_Q_sg1_lpi_1_dfm = div_1_Q_sg1_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign div_1_Q_1_lpi_1_dfm = div_1_Q_1_lpi_1 & (~ sfi_exit_tracking_lpi_1_dfm);
  assign if_1_mux_25_nl = MUX_s_1_2_2({div_dividend_1_sg31_lpi_1 , (x_total_sva_dfm_5[31])},
      sfi_exit_tracking_lpi_1_dfm);
  assign div_1_for_mux_nl = MUX_v_20_2_2({div_1_neg_divisor_1_lpi_1_dfm_mx0 , count_sva_dfm_5},
      div_1_R_lpi_1_dfm[20]);
  assign nl_div_1_R_sva_1 = ({(div_1_R_lpi_1_dfm[19:0]) , (if_1_mux_25_nl)}) + ({(~
      (div_1_R_lpi_1_dfm[20])) , (div_1_for_mux_nl)});
  assign div_1_R_sva_1 = nl_div_1_R_sva_1[20:0];
  assign nl_div_1_for_acc_3_tmp = conv_u2u_5_6(div_1_for_i_1_lpi_3 & (signext_5_1(~
      sfi_exit_tracking_lpi_1_dfm))) + 6'b1;
  assign div_1_for_acc_3_tmp = nl_div_1_for_acc_3_tmp[5:0];
  assign nl_div_3_for_acc_3_tmp = conv_u2u_5_6(div_3_for_i_1_lpi_3 & (signext_5_1(~
      sfi_exit_tracking_lpi_1_dfm))) + 6'b1;
  assign div_3_for_acc_3_tmp = nl_div_3_for_acc_3_tmp[5:0];
  assign div_3_R_lpi_1_dfm = div_3_R_lpi_1 & (signext_21_1(~ sfi_exit_tracking_lpi_1_dfm));
  assign div_1_neg_divisor_1_lpi_1_dfm_mx0 = MUX_v_20_2_2({z_out , div_1_neg_divisor_1_lpi_1},
      nor_19_tmp);
  assign div_1_R_lpi_1_dfm = div_1_R_lpi_1 & (signext_21_1(~ sfi_exit_tracking_lpi_1_dfm));
  assign if_1_or_1_tmp = (count_sva_dfm_5[19]) | (count_sva_dfm_5[18]) | (count_sva_dfm_5[17])
      | (count_sva_dfm_5[16]) | (count_sva_dfm_5[15]) | (count_sva_dfm_5[14]) | (count_sva_dfm_5[13])
      | (count_sva_dfm_5[12]) | (count_sva_dfm_5[11]) | (count_sva_dfm_5[10]) | (count_sva_dfm_5[9])
      | (count_sva_dfm_5[8]) | (count_sva_dfm_5[7]) | (count_sva_dfm_5[6]) | (count_sva_dfm_5[5])
      | (count_sva_dfm_5[4]) | (count_sva_dfm_5[3]) | (count_sva_dfm_5[2]) | (count_sva_dfm_5[1])
      | (count_sva_dfm_5[0]);
  assign if_1_nor_mx0w0 = ~((frame_y_in_rsc_mgc_in_wire_d[9]) | (frame_y_in_rsc_mgc_in_wire_d[8])
      | (frame_y_in_rsc_mgc_in_wire_d[7]) | (frame_y_in_rsc_mgc_in_wire_d[6]) | (frame_y_in_rsc_mgc_in_wire_d[5])
      | (frame_y_in_rsc_mgc_in_wire_d[4]) | (frame_y_in_rsc_mgc_in_wire_d[3]) | (frame_y_in_rsc_mgc_in_wire_d[2])
      | (frame_y_in_rsc_mgc_in_wire_d[1]) | (frame_y_in_rsc_mgc_in_wire_d[0]) | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_itm_1
      | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_1_itm_1 | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_2_itm_1
      | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_3_itm_1 | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_4_itm_1
      | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_5_itm_1 | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_6_itm_1
      | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_7_itm_1 | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_8_itm_1
      | if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_9_itm_1);
  assign mux_8_tmp = MUX_s_1_2_2({asn_sft_1_lpi_1_dfm , if_1_nor_mx0w0}, exit_div_1_for_sva);
  assign or_dcpl_63 = ~(mux_8_tmp & main_stage_0_2 & (fsm_output[0]));
  assign or_dcpl_68 = ~(main_stage_0_2 & (fsm_output[0]));
  assign or_dcpl_91 = ~(exit_div_1_for_sva & tracked_green_rsc_mgc_in_wire_d);
  assign mux_tmp_8 = MUX_s_1_2_2({(~ asn_sft_lpi_1) , if_1_or_1_tmp}, exit_div_1_for_sva);
  assign and_196_cse = (~(mux_tmp_8 & mux_8_tmp)) & main_stage_0_2;
  assign and_dcpl = (and_196_cse | (~ exit_div_1_for_sva_2)) & main_stage_0_2;
  assign or_dcpl_148 = ~((~((~ and_196_cse) & exit_div_1_for_sva_2)) & main_stage_0_2);
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      x_out_rsc_mgc_out_stdreg_d <= 10'b0;
      y_out_rsc_mgc_out_stdreg_d <= 10'b0;
      exit_div_1_for_sva <= 1'b1;
      C240_10_dfmergedata_lpi_1_sg9 <= 1'b0;
      div_3_Q_sg8_lpi_1 <= 1'b0;
      C240_10_dfmergedata_lpi_3 <= 1'b0;
      C240_10_dfmergedata_lpi_1_sg8 <= 1'b0;
      C240_10_dfmergedata_lpi_1_sg1 <= 1'b0;
      C240_10_dfmergedata_lpi_1_sg7 <= 1'b0;
      C240_10_dfmergedata_lpi_1_sg2 <= 1'b0;
      C240_10_dfmergedata_lpi_1_sg6 <= 1'b0;
      C240_10_dfmergedata_lpi_1_sg3 <= 1'b0;
      C240_10_dfmergedata_lpi_1_sg5 <= 1'b0;
      C240_10_dfmergedata_lpi_1_sg4 <= 1'b0;
      count_sva_dfm_5 <= 20'b0;
      div_1_Q_sg8_lpi_1 <= 1'b0;
      div_3_for_i_1_lpi_3 <= 5'b0;
      div_dividend_3_sg31_lpi_1 <= 1'b0;
      y_total_sva_dfm_5 <= 32'b0;
      div_1_for_i_1_lpi_3 <= 5'b0;
      div_dividend_1_sg31_lpi_1 <= 1'b0;
      x_total_sva_dfm_5 <= 32'b0;
      div_1_neg_divisor_1_lpi_1 <= 20'b0;
      div_3_Q_1_lpi_1 <= 1'b0;
      div_3_Q_sg1_lpi_1 <= 1'b0;
      div_3_Q_sg2_lpi_1 <= 1'b0;
      div_3_Q_sg3_lpi_1 <= 1'b0;
      div_3_Q_sg4_lpi_1 <= 1'b0;
      div_3_Q_sg5_lpi_1 <= 1'b0;
      div_3_Q_sg6_lpi_1 <= 1'b0;
      div_3_Q_sg7_lpi_1 <= 1'b0;
      div_1_Q_1_lpi_1 <= 1'b0;
      div_1_Q_sg1_lpi_1 <= 1'b0;
      div_1_Q_sg2_lpi_1 <= 1'b0;
      div_1_Q_sg3_lpi_1 <= 1'b0;
      div_1_Q_sg4_lpi_1 <= 1'b0;
      div_1_Q_sg5_lpi_1 <= 1'b0;
      div_1_Q_sg6_lpi_1 <= 1'b0;
      div_1_Q_sg7_lpi_1 <= 1'b0;
      div_3_R_lpi_1 <= 21'b0;
      div_1_R_lpi_1 <= 21'b0;
      sfi_exit_tracking_lpi_1 <= 1'b0;
      asn_sft_lpi_1 <= 1'b0;
      asn_sft_1_lpi_1_dfm <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_1_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_2_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_3_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_4_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_5_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_6_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_7_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_8_itm_1 <= 1'b0;
      if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_9_itm_1 <= 1'b0;
      main_stage_0_2 <= 1'b0;
      count_sva <= 20'b0;
      y_total_sva <= 32'b0;
      x_total_sva <= 32'b0;
      div_dividend_3_sg30_lpi_1 <= 1'b0;
      div_dividend_1_sg30_lpi_1 <= 1'b0;
      div_dividend_3_sg29_lpi_1 <= 1'b0;
      div_dividend_1_sg29_lpi_1 <= 1'b0;
      div_dividend_3_sg28_lpi_1 <= 1'b0;
      div_dividend_1_sg28_lpi_1 <= 1'b0;
      div_dividend_3_sg27_lpi_1 <= 1'b0;
      div_dividend_1_sg27_lpi_1 <= 1'b0;
      div_dividend_3_sg26_lpi_1 <= 1'b0;
      div_dividend_1_sg26_lpi_1 <= 1'b0;
      div_dividend_3_sg25_lpi_1 <= 1'b0;
      div_dividend_1_sg25_lpi_1 <= 1'b0;
      div_dividend_3_sg24_lpi_1 <= 1'b0;
      div_dividend_1_sg24_lpi_1 <= 1'b0;
      div_dividend_3_sg23_lpi_1 <= 1'b0;
      div_dividend_1_sg23_lpi_1 <= 1'b0;
      div_dividend_3_sg22_lpi_1 <= 1'b0;
      div_dividend_1_sg22_lpi_1 <= 1'b0;
      div_dividend_3_sg21_lpi_1 <= 1'b0;
      div_dividend_1_sg21_lpi_1 <= 1'b0;
      div_dividend_3_sg20_lpi_1 <= 1'b0;
      div_dividend_1_sg20_lpi_1 <= 1'b0;
      div_dividend_3_sg19_lpi_1 <= 1'b0;
      div_dividend_1_sg19_lpi_1 <= 1'b0;
      div_dividend_3_sg18_lpi_1 <= 1'b0;
      div_dividend_1_sg18_lpi_1 <= 1'b0;
      div_dividend_3_sg17_lpi_1 <= 1'b0;
      div_dividend_1_sg17_lpi_1 <= 1'b0;
      div_dividend_3_sg16_lpi_1 <= 1'b0;
      div_dividend_1_sg16_lpi_1 <= 1'b0;
      div_dividend_3_sg15_lpi_1 <= 1'b0;
      div_dividend_1_sg15_lpi_1 <= 1'b0;
      div_dividend_3_sg14_lpi_1 <= 1'b0;
      div_dividend_1_sg14_lpi_1 <= 1'b0;
      div_dividend_3_sg13_lpi_1 <= 1'b0;
      div_dividend_1_sg13_lpi_1 <= 1'b0;
      div_dividend_3_sg12_lpi_1 <= 1'b0;
      div_dividend_1_sg12_lpi_1 <= 1'b0;
      div_dividend_3_sg11_lpi_1 <= 1'b0;
      div_dividend_1_sg11_lpi_1 <= 1'b0;
      div_dividend_3_sg10_lpi_1 <= 1'b0;
      div_dividend_1_sg10_lpi_1 <= 1'b0;
      div_dividend_3_sg9_lpi_1 <= 1'b0;
      div_dividend_1_sg9_lpi_1 <= 1'b0;
      div_dividend_3_sg8_lpi_1 <= 1'b0;
      div_dividend_1_sg8_lpi_1 <= 1'b0;
      div_dividend_3_sg7_lpi_1 <= 1'b0;
      div_dividend_1_sg7_lpi_1 <= 1'b0;
      div_dividend_3_sg6_lpi_1 <= 1'b0;
      div_dividend_1_sg6_lpi_1 <= 1'b0;
      div_dividend_3_sg5_lpi_1 <= 1'b0;
      div_dividend_1_sg5_lpi_1 <= 1'b0;
      div_dividend_3_sg4_lpi_1 <= 1'b0;
      div_dividend_1_sg4_lpi_1 <= 1'b0;
      div_dividend_3_sg3_lpi_1 <= 1'b0;
      div_dividend_1_sg3_lpi_1 <= 1'b0;
      div_dividend_3_sg2_lpi_1 <= 1'b0;
      div_dividend_1_sg2_lpi_1 <= 1'b0;
      div_dividend_3_sg1_lpi_1 <= 1'b0;
      div_dividend_1_sg1_lpi_1 <= 1'b0;
      div_dividend_5_lpi_1 <= 1'b0;
      div_dividend_4_lpi_1 <= 1'b0;
    end
    else begin
      if ( en ) begin
        x_out_rsc_mgc_out_stdreg_d <= MUX1HOT_v_10_3_2({10'b101000000 , (({(~(div_1_Q_sg8_lpi_1
            & (~ sfi_exit_tracking_lpi_1_dfm))) , (~ div_1_Q_sg7_lpi_1_dfm) , (~
            div_1_Q_sg6_lpi_1_dfm) , (~ div_1_Q_sg5_lpi_1_dfm) , (~ div_1_Q_sg4_lpi_1_dfm)
            , (~ div_1_Q_sg3_lpi_1_dfm) , (~ div_1_Q_sg2_lpi_1_dfm) , (~ div_1_Q_sg1_lpi_1_dfm)
            , (~ div_1_Q_1_lpi_1_dfm) , (div_1_R_sva_1[20])}) + 10'b1010000001) ,
            x_out_rsc_mgc_out_stdreg_d}, {(~(if_1_and_24_tmp | or_72_cse)) , (if_1_and_24_tmp
            & (~ or_72_cse)) , or_72_cse});
        y_out_rsc_mgc_out_stdreg_d <= MUX_v_10_2_2({({C240_10_dfmergedata_lpi_1_dfm_3_sg9
            , C240_10_dfmergedata_lpi_1_dfm_3_sg8 , C240_10_dfmergedata_lpi_1_dfm_3_sg7
            , C240_10_dfmergedata_lpi_1_dfm_3_sg6 , C240_10_dfmergedata_lpi_1_dfm_3_sg5
            , C240_10_dfmergedata_lpi_1_dfm_3_sg4 , C240_10_dfmergedata_lpi_1_dfm_3_sg3
            , C240_10_dfmergedata_lpi_1_dfm_3_sg2 , C240_10_dfmergedata_lpi_1_dfm_3_sg1
            , C240_10_dfmergedata_lpi_1_dfm_5}) , y_out_rsc_mgc_out_stdreg_d}, or_72_cse);
        exit_div_1_for_sva <= MUX_s_1_2_2({(exit_div_1_for_sva_2 | asn_sft_lpi_1_dfm_mx0
            | (~ mux_315_itm)) , exit_div_1_for_sva}, or_dcpl_68);
        C240_10_dfmergedata_lpi_1_sg9 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg9
            , C240_10_dfmergedata_lpi_1_sg9}, or_dcpl_63);
        div_3_Q_sg8_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_3_Q_sg7_lpi_1_dfm , div_3_Q_sg8_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_sg8_lpi_1}, or_dcpl_63);
        C240_10_dfmergedata_lpi_3 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_5
            , C240_10_dfmergedata_lpi_3}, or_dcpl_63);
        C240_10_dfmergedata_lpi_1_sg8 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg8
            , C240_10_dfmergedata_lpi_1_sg8}, or_dcpl_63);
        C240_10_dfmergedata_lpi_1_sg1 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg1
            , C240_10_dfmergedata_lpi_1_sg1}, or_dcpl_63);
        C240_10_dfmergedata_lpi_1_sg7 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg7
            , C240_10_dfmergedata_lpi_1_sg7}, or_dcpl_63);
        C240_10_dfmergedata_lpi_1_sg2 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg2
            , C240_10_dfmergedata_lpi_1_sg2}, or_dcpl_63);
        C240_10_dfmergedata_lpi_1_sg6 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg6
            , C240_10_dfmergedata_lpi_1_sg6}, or_dcpl_63);
        C240_10_dfmergedata_lpi_1_sg3 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg3
            , C240_10_dfmergedata_lpi_1_sg3}, or_dcpl_63);
        C240_10_dfmergedata_lpi_1_sg5 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg5
            , C240_10_dfmergedata_lpi_1_sg5}, or_dcpl_63);
        C240_10_dfmergedata_lpi_1_sg4 <= MUX_s_1_2_2({C240_10_dfmergedata_lpi_1_dfm_3_sg4
            , C240_10_dfmergedata_lpi_1_sg4}, or_dcpl_63);
        count_sva_dfm_5 <= MUX_v_20_2_2({z_out , count_sva}, or_dcpl_91);
        div_1_Q_sg8_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_1_Q_sg7_lpi_1_dfm , div_1_Q_sg8_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_sg8_lpi_1}, or_dcpl_63);
        div_3_for_i_1_lpi_3 <= MUX_v_5_2_2({(div_3_for_acc_3_tmp[4:0]) , div_3_for_i_1_lpi_3},
            or_104_cse);
        div_dividend_3_sg31_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg31_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg30_lpi_1 , (y_total_sva_dfm_5[30])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg31_lpi_1}, fsm_output[1]);
        y_total_sva_dfm_5 <= MUX_v_32_2_2({(y_total_sva + conv_u2u_10_32(frame_y_in_rsc_mgc_in_wire_d))
            , y_total_sva}, or_dcpl_91);
        div_1_for_i_1_lpi_3 <= MUX_v_5_2_2({(div_1_for_acc_3_tmp[4:0]) , div_1_for_i_1_lpi_3},
            or_104_cse);
        div_dividend_1_sg31_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg31_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg30_lpi_1 , (x_total_sva_dfm_5[30])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg31_lpi_1}, fsm_output[1]);
        x_total_sva_dfm_5 <= MUX_v_32_2_2({(x_total_sva + conv_u2u_10_32(frame_x_in_rsc_mgc_in_wire_d))
            , x_total_sva}, or_dcpl_91);
        div_1_neg_divisor_1_lpi_1 <= MUX_v_20_2_2({z_out , div_1_neg_divisor_1_lpi_1},
            (nor_19_tmp & (~ (fsm_output[1]))) | (fsm_output[1]));
        div_3_Q_1_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({(~ (div_3_R_sva_1[20])) , div_3_Q_1_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_1_lpi_1}, or_dcpl_63);
        div_3_Q_sg1_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_3_Q_1_lpi_1_dfm , div_3_Q_sg1_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_sg1_lpi_1}, or_dcpl_63);
        div_3_Q_sg2_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_3_Q_sg1_lpi_1_dfm , div_3_Q_sg2_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_sg2_lpi_1}, or_dcpl_63);
        div_3_Q_sg3_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_3_Q_sg2_lpi_1_dfm , div_3_Q_sg3_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_sg3_lpi_1}, or_dcpl_63);
        div_3_Q_sg4_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_3_Q_sg3_lpi_1_dfm , div_3_Q_sg4_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_sg4_lpi_1}, or_dcpl_63);
        div_3_Q_sg5_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_3_Q_sg4_lpi_1_dfm , div_3_Q_sg5_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_sg5_lpi_1}, or_dcpl_63);
        div_3_Q_sg6_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_3_Q_sg5_lpi_1_dfm , div_3_Q_sg6_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_sg6_lpi_1}, or_dcpl_63);
        div_3_Q_sg7_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_3_Q_sg6_lpi_1_dfm , div_3_Q_sg7_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_3_Q_sg7_lpi_1}, or_dcpl_63);
        div_1_Q_1_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({(~ (div_1_R_sva_1[20])) , div_1_Q_1_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_1_lpi_1}, or_dcpl_63);
        div_1_Q_sg1_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_1_Q_1_lpi_1_dfm , div_1_Q_sg1_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_sg1_lpi_1}, or_dcpl_63);
        div_1_Q_sg2_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_1_Q_sg1_lpi_1_dfm , div_1_Q_sg2_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_sg2_lpi_1}, or_dcpl_63);
        div_1_Q_sg3_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_1_Q_sg2_lpi_1_dfm , div_1_Q_sg3_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_sg3_lpi_1}, or_dcpl_63);
        div_1_Q_sg4_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_1_Q_sg3_lpi_1_dfm , div_1_Q_sg4_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_sg4_lpi_1}, or_dcpl_63);
        div_1_Q_sg5_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_1_Q_sg4_lpi_1_dfm , div_1_Q_sg5_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_sg5_lpi_1}, or_dcpl_63);
        div_1_Q_sg6_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_1_Q_sg5_lpi_1_dfm , div_1_Q_sg6_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_sg6_lpi_1}, or_dcpl_63);
        div_1_Q_sg7_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_1_Q_sg6_lpi_1_dfm , div_1_Q_sg7_lpi_1},
            asn_sft_lpi_1_dfm_mx0)) , div_1_Q_sg7_lpi_1}, or_dcpl_63);
        div_3_R_lpi_1 <= MUX_v_21_2_2({div_3_R_sva_1 , div_3_R_lpi_1}, or_104_cse);
        div_1_R_lpi_1 <= MUX_v_21_2_2({div_1_R_sva_1 , div_1_R_lpi_1}, or_104_cse);
        sfi_exit_tracking_lpi_1 <= MUX_s_1_2_2({(sfi_exit_tracking_lpi_1 & (~ mux_315_itm))
            , sfi_exit_tracking_lpi_1}, or_dcpl_68);
        asn_sft_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({asn_sft_lpi_1 , (MUX_s_1_2_2({asn_sft_lpi_1
            , (~ if_1_or_1_tmp)}, exit_div_1_for_sva))}, main_stage_0_2)) , asn_sft_lpi_1},
            fsm_output[1]);
        asn_sft_1_lpi_1_dfm <= MUX_s_1_2_2({(MUX_s_1_2_2({asn_sft_1_lpi_1_dfm , if_1_nor_mx0w0},
            exit_div_1_for_sva)) , asn_sft_1_lpi_1_dfm}, fsm_output[1]);
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[9];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_1_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[8];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_2_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[7];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_3_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[6];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_4_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[5];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_5_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[4];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_6_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[3];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_7_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[2];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_8_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[1];
        if_1_slc_if_io_read_frame_x_in_rsc_d_ncse_sva_svs_9_itm_1 <= frame_x_in_rsc_mgc_in_wire_d[0];
        main_stage_0_2 <= 1'b1;
        count_sva <= (MUX_v_20_2_2({(signext_20_1(~ and_196_cse)) , count_sva_dfm_5},
            and_dcpl)) & (signext_20_1(~ or_dcpl_148));
        y_total_sva <= (MUX_v_32_2_2({(signext_32_1(~ and_196_cse)) , y_total_sva_dfm_5},
            and_dcpl)) & (signext_32_1(~ or_dcpl_148));
        x_total_sva <= (MUX_v_32_2_2({(signext_32_1(~ and_196_cse)) , x_total_sva_dfm_5},
            and_dcpl)) & (signext_32_1(~ or_dcpl_148));
        div_dividend_3_sg30_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg30_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg29_lpi_1 , (y_total_sva_dfm_5[29])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg30_lpi_1}, fsm_output[1]);
        div_dividend_1_sg30_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg30_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg29_lpi_1 , (x_total_sva_dfm_5[29])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg30_lpi_1}, fsm_output[1]);
        div_dividend_3_sg29_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg29_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg28_lpi_1 , (y_total_sva_dfm_5[28])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg29_lpi_1}, fsm_output[1]);
        div_dividend_1_sg29_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg29_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg28_lpi_1 , (x_total_sva_dfm_5[28])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg29_lpi_1}, fsm_output[1]);
        div_dividend_3_sg28_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg28_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg27_lpi_1 , (y_total_sva_dfm_5[27])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg28_lpi_1}, fsm_output[1]);
        div_dividend_1_sg28_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg28_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg27_lpi_1 , (x_total_sva_dfm_5[27])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg28_lpi_1}, fsm_output[1]);
        div_dividend_3_sg27_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg27_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg26_lpi_1 , (y_total_sva_dfm_5[26])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg27_lpi_1}, fsm_output[1]);
        div_dividend_1_sg27_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg27_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg26_lpi_1 , (x_total_sva_dfm_5[26])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg27_lpi_1}, fsm_output[1]);
        div_dividend_3_sg26_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg26_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg25_lpi_1 , (y_total_sva_dfm_5[25])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg26_lpi_1}, fsm_output[1]);
        div_dividend_1_sg26_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg26_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg25_lpi_1 , (x_total_sva_dfm_5[25])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg26_lpi_1}, fsm_output[1]);
        div_dividend_3_sg25_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg25_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg24_lpi_1 , (y_total_sva_dfm_5[24])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg25_lpi_1}, fsm_output[1]);
        div_dividend_1_sg25_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg25_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg24_lpi_1 , (x_total_sva_dfm_5[24])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg25_lpi_1}, fsm_output[1]);
        div_dividend_3_sg24_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg24_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg23_lpi_1 , (y_total_sva_dfm_5[23])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg24_lpi_1}, fsm_output[1]);
        div_dividend_1_sg24_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg24_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg23_lpi_1 , (x_total_sva_dfm_5[23])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg24_lpi_1}, fsm_output[1]);
        div_dividend_3_sg23_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg23_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg22_lpi_1 , (y_total_sva_dfm_5[22])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg23_lpi_1}, fsm_output[1]);
        div_dividend_1_sg23_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg23_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg22_lpi_1 , (x_total_sva_dfm_5[22])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg23_lpi_1}, fsm_output[1]);
        div_dividend_3_sg22_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg22_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg21_lpi_1 , (y_total_sva_dfm_5[21])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg22_lpi_1}, fsm_output[1]);
        div_dividend_1_sg22_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg22_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg21_lpi_1 , (x_total_sva_dfm_5[21])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg22_lpi_1}, fsm_output[1]);
        div_dividend_3_sg21_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg21_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg20_lpi_1 , (y_total_sva_dfm_5[20])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg21_lpi_1}, fsm_output[1]);
        div_dividend_1_sg21_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg21_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg20_lpi_1 , (x_total_sva_dfm_5[20])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg21_lpi_1}, fsm_output[1]);
        div_dividend_3_sg20_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg20_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg19_lpi_1 , (y_total_sva_dfm_5[19])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg20_lpi_1}, fsm_output[1]);
        div_dividend_1_sg20_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg20_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg19_lpi_1 , (x_total_sva_dfm_5[19])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg20_lpi_1}, fsm_output[1]);
        div_dividend_3_sg19_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg19_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg18_lpi_1 , (y_total_sva_dfm_5[18])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg19_lpi_1}, fsm_output[1]);
        div_dividend_1_sg19_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg19_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg18_lpi_1 , (x_total_sva_dfm_5[18])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg19_lpi_1}, fsm_output[1]);
        div_dividend_3_sg18_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg18_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg17_lpi_1 , (y_total_sva_dfm_5[17])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg18_lpi_1}, fsm_output[1]);
        div_dividend_1_sg18_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg18_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg17_lpi_1 , (x_total_sva_dfm_5[17])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg18_lpi_1}, fsm_output[1]);
        div_dividend_3_sg17_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg17_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg16_lpi_1 , (y_total_sva_dfm_5[16])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg17_lpi_1}, fsm_output[1]);
        div_dividend_1_sg17_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg17_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg16_lpi_1 , (x_total_sva_dfm_5[16])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg17_lpi_1}, fsm_output[1]);
        div_dividend_3_sg16_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg16_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg15_lpi_1 , (y_total_sva_dfm_5[15])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg16_lpi_1}, fsm_output[1]);
        div_dividend_1_sg16_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg16_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg15_lpi_1 , (x_total_sva_dfm_5[15])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg16_lpi_1}, fsm_output[1]);
        div_dividend_3_sg15_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg15_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg14_lpi_1 , (y_total_sva_dfm_5[14])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg15_lpi_1}, fsm_output[1]);
        div_dividend_1_sg15_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg15_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg14_lpi_1 , (x_total_sva_dfm_5[14])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg15_lpi_1}, fsm_output[1]);
        div_dividend_3_sg14_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg14_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg13_lpi_1 , (y_total_sva_dfm_5[13])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg14_lpi_1}, fsm_output[1]);
        div_dividend_1_sg14_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg14_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg13_lpi_1 , (x_total_sva_dfm_5[13])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg14_lpi_1}, fsm_output[1]);
        div_dividend_3_sg13_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg13_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg12_lpi_1 , (y_total_sva_dfm_5[12])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg13_lpi_1}, fsm_output[1]);
        div_dividend_1_sg13_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg13_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg12_lpi_1 , (x_total_sva_dfm_5[12])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg13_lpi_1}, fsm_output[1]);
        div_dividend_3_sg12_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg12_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg11_lpi_1 , (y_total_sva_dfm_5[11])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg12_lpi_1}, fsm_output[1]);
        div_dividend_1_sg12_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg12_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg11_lpi_1 , (x_total_sva_dfm_5[11])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg12_lpi_1}, fsm_output[1]);
        div_dividend_3_sg11_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg11_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg10_lpi_1 , (y_total_sva_dfm_5[10])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_3_sg11_lpi_1}, fsm_output[1]);
        div_dividend_1_sg11_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg11_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg10_lpi_1 , (x_total_sva_dfm_5[10])},
            and_203_cse))}, main_stage_0_2)) , div_dividend_1_sg11_lpi_1}, fsm_output[1]);
        div_dividend_3_sg10_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg10_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg9_lpi_1 , (y_total_sva_dfm_5[9])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg10_lpi_1}, fsm_output[1]);
        div_dividend_1_sg10_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg10_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg9_lpi_1 , (x_total_sva_dfm_5[9])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg10_lpi_1}, fsm_output[1]);
        div_dividend_3_sg9_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg9_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg8_lpi_1 , (y_total_sva_dfm_5[8])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg9_lpi_1}, fsm_output[1]);
        div_dividend_1_sg9_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg9_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg8_lpi_1 , (x_total_sva_dfm_5[8])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg9_lpi_1}, fsm_output[1]);
        div_dividend_3_sg8_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg8_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg7_lpi_1 , (y_total_sva_dfm_5[7])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg8_lpi_1}, fsm_output[1]);
        div_dividend_1_sg8_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg8_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg7_lpi_1 , (x_total_sva_dfm_5[7])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg8_lpi_1}, fsm_output[1]);
        div_dividend_3_sg7_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg7_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg6_lpi_1 , (y_total_sva_dfm_5[6])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg7_lpi_1}, fsm_output[1]);
        div_dividend_1_sg7_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg7_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg6_lpi_1 , (x_total_sva_dfm_5[6])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg7_lpi_1}, fsm_output[1]);
        div_dividend_3_sg6_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg6_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg5_lpi_1 , (y_total_sva_dfm_5[5])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg6_lpi_1}, fsm_output[1]);
        div_dividend_1_sg6_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg6_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg5_lpi_1 , (x_total_sva_dfm_5[5])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg6_lpi_1}, fsm_output[1]);
        div_dividend_3_sg5_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg5_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg4_lpi_1 , (y_total_sva_dfm_5[4])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg5_lpi_1}, fsm_output[1]);
        div_dividend_1_sg5_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg5_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg4_lpi_1 , (x_total_sva_dfm_5[4])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg5_lpi_1}, fsm_output[1]);
        div_dividend_3_sg4_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg4_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg3_lpi_1 , (y_total_sva_dfm_5[3])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg4_lpi_1}, fsm_output[1]);
        div_dividend_1_sg4_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg4_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg3_lpi_1 , (x_total_sva_dfm_5[3])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg4_lpi_1}, fsm_output[1]);
        div_dividend_3_sg3_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg3_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg2_lpi_1 , (y_total_sva_dfm_5[2])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg3_lpi_1}, fsm_output[1]);
        div_dividend_1_sg3_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg3_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg2_lpi_1 , (x_total_sva_dfm_5[2])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg3_lpi_1}, fsm_output[1]);
        div_dividend_3_sg2_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg2_lpi_1
            , (MUX_s_1_2_2({div_dividend_3_sg1_lpi_1 , (y_total_sva_dfm_5[1])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg2_lpi_1}, fsm_output[1]);
        div_dividend_1_sg2_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg2_lpi_1
            , (MUX_s_1_2_2({div_dividend_1_sg1_lpi_1 , (x_total_sva_dfm_5[1])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg2_lpi_1}, fsm_output[1]);
        div_dividend_3_sg1_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_3_sg1_lpi_1
            , (MUX_s_1_2_2({div_dividend_5_lpi_1 , (y_total_sva_dfm_5[0])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_3_sg1_lpi_1}, fsm_output[1]);
        div_dividend_1_sg1_lpi_1 <= MUX_s_1_2_2({(MUX_s_1_2_2({div_dividend_1_sg1_lpi_1
            , (MUX_s_1_2_2({div_dividend_4_lpi_1 , (x_total_sva_dfm_5[0])}, and_203_cse))},
            main_stage_0_2)) , div_dividend_1_sg1_lpi_1}, fsm_output[1]);
        div_dividend_5_lpi_1 <= MUX_s_1_2_2({(div_dividend_5_lpi_1 & asn_sft_lpi_1_dfm_mx0)
            , div_dividend_5_lpi_1}, or_dcpl_63);
        div_dividend_4_lpi_1 <= MUX_s_1_2_2({(div_dividend_4_lpi_1 & asn_sft_lpi_1_dfm_mx0)
            , div_dividend_4_lpi_1}, or_dcpl_63);
      end
    end
  end
  assign mux_314_nl = MUX_v_20_2_2({count_sva , (~ count_sva_dfm_5)}, fsm_output[0]);
  assign nl_z_out = (mux_314_nl) + 20'b1;
  assign z_out = nl_z_out[19:0];

  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function [19:0] MUX_v_20_2_2;
    input [39:0] inputs;
    input [0:0] sel;
    reg [19:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[39:20];
      end
      1'b1 : begin
        result = inputs[19:0];
      end
      default : begin
        result = inputs[39:20];
      end
    endcase
    MUX_v_20_2_2 = result;
  end
  endfunction


  function [4:0] signext_5_1;
    input [0:0] vector;
  begin
    signext_5_1= {{4{vector[0]}}, vector};
  end
  endfunction


  function [20:0] signext_21_1;
    input [0:0] vector;
  begin
    signext_21_1= {{20{vector[0]}}, vector};
  end
  endfunction


  function [9:0] MUX1HOT_v_10_3_2;
    input [29:0] inputs;
    input [2:0] sel;
    reg [9:0] result;
    integer i;
  begin
    result = inputs[0+:10] & {10{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*10+:10] & {10{sel[i]}});
    MUX1HOT_v_10_3_2 = result;
  end
  endfunction


  function [9:0] MUX_v_10_2_2;
    input [19:0] inputs;
    input [0:0] sel;
    reg [9:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[19:10];
      end
      1'b1 : begin
        result = inputs[9:0];
      end
      default : begin
        result = inputs[19:10];
      end
    endcase
    MUX_v_10_2_2 = result;
  end
  endfunction


  function [4:0] MUX_v_5_2_2;
    input [9:0] inputs;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[9:5];
      end
      1'b1 : begin
        result = inputs[4:0];
      end
      default : begin
        result = inputs[9:5];
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction


  function [31:0] MUX_v_32_2_2;
    input [63:0] inputs;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[63:32];
      end
      1'b1 : begin
        result = inputs[31:0];
      end
      default : begin
        result = inputs[63:32];
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function [20:0] MUX_v_21_2_2;
    input [41:0] inputs;
    input [0:0] sel;
    reg [20:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[41:21];
      end
      1'b1 : begin
        result = inputs[20:0];
      end
      default : begin
        result = inputs[41:21];
      end
    endcase
    MUX_v_21_2_2 = result;
  end
  endfunction


  function [19:0] signext_20_1;
    input [0:0] vector;
  begin
    signext_20_1= {{19{vector[0]}}, vector};
  end
  endfunction


  function [31:0] signext_32_1;
    input [0:0] vector;
  begin
    signext_32_1= {{31{vector[0]}}, vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function  [31:0] conv_u2u_10_32 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_32 = {{22{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    tracking
//  Generated from file(s):
//    5) $PROJECT_HOME/tracking.cpp
// ------------------------------------------------------------------


module tracking (
  tracked_green_rsc_z, frame_x_in_rsc_z, frame_y_in_rsc_z, x_out_rsc_z, y_out_rsc_z,
      clk, en, arst_n
);
  input tracked_green_rsc_z;
  input [9:0] frame_x_in_rsc_z;
  input [9:0] frame_y_in_rsc_z;
  output [9:0] x_out_rsc_z;
  output [9:0] y_out_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire tracked_green_rsc_mgc_in_wire_d;
  wire [9:0] frame_x_in_rsc_mgc_in_wire_d;
  wire [9:0] frame_y_in_rsc_mgc_in_wire_d;
  wire [9:0] x_out_rsc_mgc_out_stdreg_d;
  wire [9:0] y_out_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(1)) tracked_green_rsc_mgc_in_wire (
      .d(tracked_green_rsc_mgc_in_wire_d),
      .z(tracked_green_rsc_z)
    );
  mgc_in_wire #(.rscid(2),
  .width(10)) frame_x_in_rsc_mgc_in_wire (
      .d(frame_x_in_rsc_mgc_in_wire_d),
      .z(frame_x_in_rsc_z)
    );
  mgc_in_wire #(.rscid(3),
  .width(10)) frame_y_in_rsc_mgc_in_wire (
      .d(frame_y_in_rsc_mgc_in_wire_d),
      .z(frame_y_in_rsc_z)
    );
  mgc_out_stdreg #(.rscid(4),
  .width(10)) x_out_rsc_mgc_out_stdreg (
      .d(x_out_rsc_mgc_out_stdreg_d),
      .z(x_out_rsc_z)
    );
  mgc_out_stdreg #(.rscid(5),
  .width(10)) y_out_rsc_mgc_out_stdreg (
      .d(y_out_rsc_mgc_out_stdreg_d),
      .z(y_out_rsc_z)
    );
  tracking_core tracking_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .tracked_green_rsc_mgc_in_wire_d(tracked_green_rsc_mgc_in_wire_d),
      .frame_x_in_rsc_mgc_in_wire_d(frame_x_in_rsc_mgc_in_wire_d),
      .frame_y_in_rsc_mgc_in_wire_d(frame_y_in_rsc_mgc_in_wire_d),
      .x_out_rsc_mgc_out_stdreg_d(x_out_rsc_mgc_out_stdreg_d),
      .y_out_rsc_mgc_out_stdreg_d(y_out_rsc_mgc_out_stdreg_d)
    );
endmodule



